// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class BasicModuleSyncOuterClass {
  /**
   * Protobuf type {@code BasicModuleSync}
   */
  public static final class BasicModuleSync extends ProtoMessage<BasicModuleSync> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 stamina = 2;</code>
     */
    private int stamina;

    /**
     * <code>optional uint32 week_cocoon_finished_count = 13;</code>
     */
    private int weekCocoonFinishedCount;

    private BasicModuleSync() {
    }

    /**
     * @return a new empty instance of {@code BasicModuleSync}
     */
    public static BasicModuleSync newInstance() {
      return new BasicModuleSync();
    }

    /**
     * <code>optional uint32 stamina = 2;</code>
     * @return whether the stamina field is set
     */
    public boolean hasStamina() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 stamina = 2;</code>
     * @return this
     */
    public BasicModuleSync clearStamina() {
      bitField0_ &= ~0x00000001;
      stamina = 0;
      return this;
    }

    /**
     * <code>optional uint32 stamina = 2;</code>
     * @return the stamina
     */
    public int getStamina() {
      return stamina;
    }

    /**
     * <code>optional uint32 stamina = 2;</code>
     * @param value the stamina to set
     * @return this
     */
    public BasicModuleSync setStamina(final int value) {
      bitField0_ |= 0x00000001;
      stamina = value;
      return this;
    }

    /**
     * <code>optional uint32 week_cocoon_finished_count = 13;</code>
     * @return whether the weekCocoonFinishedCount field is set
     */
    public boolean hasWeekCocoonFinishedCount() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 week_cocoon_finished_count = 13;</code>
     * @return this
     */
    public BasicModuleSync clearWeekCocoonFinishedCount() {
      bitField0_ &= ~0x00000002;
      weekCocoonFinishedCount = 0;
      return this;
    }

    /**
     * <code>optional uint32 week_cocoon_finished_count = 13;</code>
     * @return the weekCocoonFinishedCount
     */
    public int getWeekCocoonFinishedCount() {
      return weekCocoonFinishedCount;
    }

    /**
     * <code>optional uint32 week_cocoon_finished_count = 13;</code>
     * @param value the weekCocoonFinishedCount to set
     * @return this
     */
    public BasicModuleSync setWeekCocoonFinishedCount(final int value) {
      bitField0_ |= 0x00000002;
      weekCocoonFinishedCount = value;
      return this;
    }

    @Override
    public BasicModuleSync copyFrom(final BasicModuleSync other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        stamina = other.stamina;
        weekCocoonFinishedCount = other.weekCocoonFinishedCount;
      }
      return this;
    }

    @Override
    public BasicModuleSync mergeFrom(final BasicModuleSync other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasStamina()) {
        setStamina(other.stamina);
      }
      if (other.hasWeekCocoonFinishedCount()) {
        setWeekCocoonFinishedCount(other.weekCocoonFinishedCount);
      }
      return this;
    }

    @Override
    public BasicModuleSync clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      stamina = 0;
      weekCocoonFinishedCount = 0;
      return this;
    }

    @Override
    public BasicModuleSync clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof BasicModuleSync)) {
        return false;
      }
      BasicModuleSync other = (BasicModuleSync) o;
      return bitField0_ == other.bitField0_
        && (!hasStamina() || stamina == other.stamina)
        && (!hasWeekCocoonFinishedCount() || weekCocoonFinishedCount == other.weekCocoonFinishedCount);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(stamina);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(weekCocoonFinishedCount);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(stamina);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(weekCocoonFinishedCount);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public BasicModuleSync mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // stamina
            stamina = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // weekCocoonFinishedCount
            weekCocoonFinishedCount = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.stamina, stamina);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.weekCocoonFinishedCount, weekCocoonFinishedCount);
      }
      output.endObject();
    }

    @Override
    public BasicModuleSync mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1897344401: {
            if (input.isAtField(FieldNames.stamina)) {
              if (!input.trySkipNullValue()) {
                stamina = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1387396786:
          case 668486783: {
            if (input.isAtField(FieldNames.weekCocoonFinishedCount)) {
              if (!input.trySkipNullValue()) {
                weekCocoonFinishedCount = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public BasicModuleSync clone() {
      return new BasicModuleSync().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static BasicModuleSync parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new BasicModuleSync(), data).checkInitialized();
    }

    public static BasicModuleSync parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new BasicModuleSync(), input).checkInitialized();
    }

    public static BasicModuleSync parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new BasicModuleSync(), input).checkInitialized();
    }

    /**
     * @return factory for creating BasicModuleSync messages
     */
    public static MessageFactory<BasicModuleSync> getFactory() {
      return BasicModuleSyncFactory.INSTANCE;
    }

    private enum BasicModuleSyncFactory implements MessageFactory<BasicModuleSync> {
      INSTANCE;

      @Override
      public BasicModuleSync create() {
        return BasicModuleSync.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName stamina = FieldName.forField("stamina");

      static final FieldName weekCocoonFinishedCount = FieldName.forField("weekCocoonFinishedCount", "week_cocoon_finished_count");
    }
  }
}
