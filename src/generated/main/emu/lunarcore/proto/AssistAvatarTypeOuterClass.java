// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class AssistAvatarTypeOuterClass {
  /**
   * Protobuf enum {@code AssistAvatarType}
   */
  public enum AssistAvatarType implements ProtoEnum<AssistAvatarType> {
    /**
     * <code>ASSIST_AVATAR_UNKNOW = 0;</code>
     */
    ASSIST_AVATAR_UNKNOW("ASSIST_AVATAR_UNKNOW", 0),

    /**
     * <code>ASSIST_AVATAR_LEVEL = 1;</code>
     */
    ASSIST_AVATAR_LEVEL("ASSIST_AVATAR_LEVEL", 1),

    /**
     * <code>ASSIST_AVATAR_RANK = 2;</code>
     */
    ASSIST_AVATAR_RANK("ASSIST_AVATAR_RANK", 2);

    /**
     * <code>ASSIST_AVATAR_UNKNOW = 0;</code>
     */
    public static final int ASSIST_AVATAR_UNKNOW_VALUE = 0;

    /**
     * <code>ASSIST_AVATAR_LEVEL = 1;</code>
     */
    public static final int ASSIST_AVATAR_LEVEL_VALUE = 1;

    /**
     * <code>ASSIST_AVATAR_RANK = 2;</code>
     */
    public static final int ASSIST_AVATAR_RANK_VALUE = 2;

    private final String name;

    private final int number;

    private AssistAvatarType(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<AssistAvatarType> converter() {
      return AssistAvatarTypeConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static AssistAvatarType forNumber(int value) {
      return AssistAvatarTypeConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static AssistAvatarType forNumberOr(int number, AssistAvatarType other) {
      AssistAvatarType value = forNumber(number);
      return value == null ? other : value;
    }

    enum AssistAvatarTypeConverter implements ProtoEnum.EnumConverter<AssistAvatarType> {
      INSTANCE;

      private static final AssistAvatarType[] lookup = new AssistAvatarType[3];

      static {
        lookup[0] = ASSIST_AVATAR_UNKNOW;
        lookup[1] = ASSIST_AVATAR_LEVEL;
        lookup[2] = ASSIST_AVATAR_RANK;
      }

      @Override
      public final AssistAvatarType forNumber(final int value) {
        if (value >= 0 && value < lookup.length) {
          return lookup[value];
        }
        return null;
      }

      @Override
      public final AssistAvatarType forName(final CharSequence value) {
        if (value.length() == 18) {
          if (ProtoUtil.isEqual("ASSIST_AVATAR_RANK", value)) {
            return ASSIST_AVATAR_RANK;
          }
        }
        if (value.length() == 19) {
          if (ProtoUtil.isEqual("ASSIST_AVATAR_LEVEL", value)) {
            return ASSIST_AVATAR_LEVEL;
          }
        }
        if (value.length() == 20) {
          if (ProtoUtil.isEqual("ASSIST_AVATAR_UNKNOW", value)) {
            return ASSIST_AVATAR_UNKNOW;
          }
        }
        return null;
      }
    }
  }
}
