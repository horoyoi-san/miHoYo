// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;

public final class UnlockBackGroundMusicCsReqOuterClass {
  /**
   * Protobuf type {@code UnlockBackGroundMusicCsReq}
   */
  public static final class UnlockBackGroundMusicCsReq extends ProtoMessage<UnlockBackGroundMusicCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     */
    private final RepeatedInt reqUnlockIds = RepeatedInt.newEmptyInstance();

    private UnlockBackGroundMusicCsReq() {
    }

    /**
     * @return a new empty instance of {@code UnlockBackGroundMusicCsReq}
     */
    public static UnlockBackGroundMusicCsReq newInstance() {
      return new UnlockBackGroundMusicCsReq();
    }

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     * @return whether the reqUnlockIds field is set
     */
    public boolean hasReqUnlockIds() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     * @return this
     */
    public UnlockBackGroundMusicCsReq clearReqUnlockIds() {
      bitField0_ &= ~0x00000001;
      reqUnlockIds.clear();
      return this;
    }

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableReqUnlockIds()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getReqUnlockIds() {
      return reqUnlockIds;
    }

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableReqUnlockIds() {
      bitField0_ |= 0x00000001;
      return reqUnlockIds;
    }

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     * @param value the reqUnlockIds to add
     * @return this
     */
    public UnlockBackGroundMusicCsReq addReqUnlockIds(final int value) {
      bitField0_ |= 0x00000001;
      reqUnlockIds.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 req_unlock_ids = 5;</code>
     * @param values the reqUnlockIds to add
     * @return this
     */
    public UnlockBackGroundMusicCsReq addAllReqUnlockIds(final int... values) {
      bitField0_ |= 0x00000001;
      reqUnlockIds.addAll(values);
      return this;
    }

    @Override
    public UnlockBackGroundMusicCsReq copyFrom(final UnlockBackGroundMusicCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        reqUnlockIds.copyFrom(other.reqUnlockIds);
      }
      return this;
    }

    @Override
    public UnlockBackGroundMusicCsReq mergeFrom(final UnlockBackGroundMusicCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasReqUnlockIds()) {
        getMutableReqUnlockIds().addAll(other.reqUnlockIds);
      }
      return this;
    }

    @Override
    public UnlockBackGroundMusicCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      reqUnlockIds.clear();
      return this;
    }

    @Override
    public UnlockBackGroundMusicCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      reqUnlockIds.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof UnlockBackGroundMusicCsReq)) {
        return false;
      }
      UnlockBackGroundMusicCsReq other = (UnlockBackGroundMusicCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasReqUnlockIds() || reqUnlockIds.equals(other.reqUnlockIds));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        for (int i = 0; i < reqUnlockIds.length(); i++) {
          output.writeRawByte((byte) 40);
          output.writeUInt32NoTag(reqUnlockIds.array()[i]);
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += (1 * reqUnlockIds.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(reqUnlockIds);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public UnlockBackGroundMusicCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 42: {
            // reqUnlockIds [packed=true]
            input.readPackedUInt32(reqUnlockIds, tag);
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 40: {
            // reqUnlockIds [packed=false]
            tag = input.readRepeatedUInt32(reqUnlockIds, tag);
            bitField0_ |= 0x00000001;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRepeatedUInt32(FieldNames.reqUnlockIds, reqUnlockIds);
      }
      output.endObject();
    }

    @Override
    public UnlockBackGroundMusicCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -244645418:
          case 562631038: {
            if (input.isAtField(FieldNames.reqUnlockIds)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(reqUnlockIds);
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public UnlockBackGroundMusicCsReq clone() {
      return new UnlockBackGroundMusicCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static UnlockBackGroundMusicCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new UnlockBackGroundMusicCsReq(), data).checkInitialized();
    }

    public static UnlockBackGroundMusicCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new UnlockBackGroundMusicCsReq(), input).checkInitialized();
    }

    public static UnlockBackGroundMusicCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new UnlockBackGroundMusicCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating UnlockBackGroundMusicCsReq messages
     */
    public static MessageFactory<UnlockBackGroundMusicCsReq> getFactory() {
      return UnlockBackGroundMusicCsReqFactory.INSTANCE;
    }

    private enum UnlockBackGroundMusicCsReqFactory implements MessageFactory<UnlockBackGroundMusicCsReq> {
      INSTANCE;

      @Override
      public UnlockBackGroundMusicCsReq create() {
        return UnlockBackGroundMusicCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName reqUnlockIds = FieldName.forField("reqUnlockIds", "req_unlock_ids");
    }
  }
}
