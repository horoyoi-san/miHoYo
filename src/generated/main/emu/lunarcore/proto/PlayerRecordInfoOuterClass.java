// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerRecordInfoOuterClass {
  /**
   * Protobuf type {@code PlayerRecordInfo}
   */
  public static final class PlayerRecordInfo extends ProtoMessage<PlayerRecordInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 FABJGCEEABG = 2;</code>
     */
    private int fABJGCEEABG;

    /**
     * <code>optional uint32 JEMLCOOOBOO = 4;</code>
     */
    private int jEMLCOOOBOO;

    /**
     * <code>optional uint32 HMHGEDPFEBA = 6;</code>
     */
    private int hMHGEDPFEBA;

    /**
     * <code>optional uint32 JIOMBOMGDHP = 8;</code>
     */
    private int jIOMBOMGDHP;

    /**
     * <code>optional uint32 HEFKKIANPJE = 10;</code>
     */
    private int hEFKKIANPJE;

    /**
     * <code>optional uint32 INNBJJFDEBD = 12;</code>
     */
    private int iNNBJJFDEBD;

    /**
     * <code>optional uint32 MBBDPBOOEAP = 13;</code>
     */
    private int mBBDPBOOEAP;

    /**
     * <code>optional uint32 KNJPGKKOEDD = 14;</code>
     */
    private int kNJPGKKOEDD;

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 5;</code>
     */
    private final PlayerCollectionInfoOuterClass.PlayerCollectionInfo collectionInfo = PlayerCollectionInfoOuterClass.PlayerCollectionInfo.newInstance();

    private PlayerRecordInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerRecordInfo}
     */
    public static PlayerRecordInfo newInstance() {
      return new PlayerRecordInfo();
    }

    /**
     * <code>optional uint32 FABJGCEEABG = 2;</code>
     * @return whether the fABJGCEEABG field is set
     */
    public boolean hasFABJGCEEABG() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 FABJGCEEABG = 2;</code>
     * @return this
     */
    public PlayerRecordInfo clearFABJGCEEABG() {
      bitField0_ &= ~0x00000001;
      fABJGCEEABG = 0;
      return this;
    }

    /**
     * <code>optional uint32 FABJGCEEABG = 2;</code>
     * @return the fABJGCEEABG
     */
    public int getFABJGCEEABG() {
      return fABJGCEEABG;
    }

    /**
     * <code>optional uint32 FABJGCEEABG = 2;</code>
     * @param value the fABJGCEEABG to set
     * @return this
     */
    public PlayerRecordInfo setFABJGCEEABG(final int value) {
      bitField0_ |= 0x00000001;
      fABJGCEEABG = value;
      return this;
    }

    /**
     * <code>optional uint32 JEMLCOOOBOO = 4;</code>
     * @return whether the jEMLCOOOBOO field is set
     */
    public boolean hasJEMLCOOOBOO() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 JEMLCOOOBOO = 4;</code>
     * @return this
     */
    public PlayerRecordInfo clearJEMLCOOOBOO() {
      bitField0_ &= ~0x00000002;
      jEMLCOOOBOO = 0;
      return this;
    }

    /**
     * <code>optional uint32 JEMLCOOOBOO = 4;</code>
     * @return the jEMLCOOOBOO
     */
    public int getJEMLCOOOBOO() {
      return jEMLCOOOBOO;
    }

    /**
     * <code>optional uint32 JEMLCOOOBOO = 4;</code>
     * @param value the jEMLCOOOBOO to set
     * @return this
     */
    public PlayerRecordInfo setJEMLCOOOBOO(final int value) {
      bitField0_ |= 0x00000002;
      jEMLCOOOBOO = value;
      return this;
    }

    /**
     * <code>optional uint32 HMHGEDPFEBA = 6;</code>
     * @return whether the hMHGEDPFEBA field is set
     */
    public boolean hasHMHGEDPFEBA() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 HMHGEDPFEBA = 6;</code>
     * @return this
     */
    public PlayerRecordInfo clearHMHGEDPFEBA() {
      bitField0_ &= ~0x00000004;
      hMHGEDPFEBA = 0;
      return this;
    }

    /**
     * <code>optional uint32 HMHGEDPFEBA = 6;</code>
     * @return the hMHGEDPFEBA
     */
    public int getHMHGEDPFEBA() {
      return hMHGEDPFEBA;
    }

    /**
     * <code>optional uint32 HMHGEDPFEBA = 6;</code>
     * @param value the hMHGEDPFEBA to set
     * @return this
     */
    public PlayerRecordInfo setHMHGEDPFEBA(final int value) {
      bitField0_ |= 0x00000004;
      hMHGEDPFEBA = value;
      return this;
    }

    /**
     * <code>optional uint32 JIOMBOMGDHP = 8;</code>
     * @return whether the jIOMBOMGDHP field is set
     */
    public boolean hasJIOMBOMGDHP() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 JIOMBOMGDHP = 8;</code>
     * @return this
     */
    public PlayerRecordInfo clearJIOMBOMGDHP() {
      bitField0_ &= ~0x00000008;
      jIOMBOMGDHP = 0;
      return this;
    }

    /**
     * <code>optional uint32 JIOMBOMGDHP = 8;</code>
     * @return the jIOMBOMGDHP
     */
    public int getJIOMBOMGDHP() {
      return jIOMBOMGDHP;
    }

    /**
     * <code>optional uint32 JIOMBOMGDHP = 8;</code>
     * @param value the jIOMBOMGDHP to set
     * @return this
     */
    public PlayerRecordInfo setJIOMBOMGDHP(final int value) {
      bitField0_ |= 0x00000008;
      jIOMBOMGDHP = value;
      return this;
    }

    /**
     * <code>optional uint32 HEFKKIANPJE = 10;</code>
     * @return whether the hEFKKIANPJE field is set
     */
    public boolean hasHEFKKIANPJE() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 HEFKKIANPJE = 10;</code>
     * @return this
     */
    public PlayerRecordInfo clearHEFKKIANPJE() {
      bitField0_ &= ~0x00000010;
      hEFKKIANPJE = 0;
      return this;
    }

    /**
     * <code>optional uint32 HEFKKIANPJE = 10;</code>
     * @return the hEFKKIANPJE
     */
    public int getHEFKKIANPJE() {
      return hEFKKIANPJE;
    }

    /**
     * <code>optional uint32 HEFKKIANPJE = 10;</code>
     * @param value the hEFKKIANPJE to set
     * @return this
     */
    public PlayerRecordInfo setHEFKKIANPJE(final int value) {
      bitField0_ |= 0x00000010;
      hEFKKIANPJE = value;
      return this;
    }

    /**
     * <code>optional uint32 INNBJJFDEBD = 12;</code>
     * @return whether the iNNBJJFDEBD field is set
     */
    public boolean hasINNBJJFDEBD() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional uint32 INNBJJFDEBD = 12;</code>
     * @return this
     */
    public PlayerRecordInfo clearINNBJJFDEBD() {
      bitField0_ &= ~0x00000020;
      iNNBJJFDEBD = 0;
      return this;
    }

    /**
     * <code>optional uint32 INNBJJFDEBD = 12;</code>
     * @return the iNNBJJFDEBD
     */
    public int getINNBJJFDEBD() {
      return iNNBJJFDEBD;
    }

    /**
     * <code>optional uint32 INNBJJFDEBD = 12;</code>
     * @param value the iNNBJJFDEBD to set
     * @return this
     */
    public PlayerRecordInfo setINNBJJFDEBD(final int value) {
      bitField0_ |= 0x00000020;
      iNNBJJFDEBD = value;
      return this;
    }

    /**
     * <code>optional uint32 MBBDPBOOEAP = 13;</code>
     * @return whether the mBBDPBOOEAP field is set
     */
    public boolean hasMBBDPBOOEAP() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional uint32 MBBDPBOOEAP = 13;</code>
     * @return this
     */
    public PlayerRecordInfo clearMBBDPBOOEAP() {
      bitField0_ &= ~0x00000040;
      mBBDPBOOEAP = 0;
      return this;
    }

    /**
     * <code>optional uint32 MBBDPBOOEAP = 13;</code>
     * @return the mBBDPBOOEAP
     */
    public int getMBBDPBOOEAP() {
      return mBBDPBOOEAP;
    }

    /**
     * <code>optional uint32 MBBDPBOOEAP = 13;</code>
     * @param value the mBBDPBOOEAP to set
     * @return this
     */
    public PlayerRecordInfo setMBBDPBOOEAP(final int value) {
      bitField0_ |= 0x00000040;
      mBBDPBOOEAP = value;
      return this;
    }

    /**
     * <code>optional uint32 KNJPGKKOEDD = 14;</code>
     * @return whether the kNJPGKKOEDD field is set
     */
    public boolean hasKNJPGKKOEDD() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional uint32 KNJPGKKOEDD = 14;</code>
     * @return this
     */
    public PlayerRecordInfo clearKNJPGKKOEDD() {
      bitField0_ &= ~0x00000080;
      kNJPGKKOEDD = 0;
      return this;
    }

    /**
     * <code>optional uint32 KNJPGKKOEDD = 14;</code>
     * @return the kNJPGKKOEDD
     */
    public int getKNJPGKKOEDD() {
      return kNJPGKKOEDD;
    }

    /**
     * <code>optional uint32 KNJPGKKOEDD = 14;</code>
     * @param value the kNJPGKKOEDD to set
     * @return this
     */
    public PlayerRecordInfo setKNJPGKKOEDD(final int value) {
      bitField0_ |= 0x00000080;
      kNJPGKKOEDD = value;
      return this;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 5;</code>
     * @return whether the collectionInfo field is set
     */
    public boolean hasCollectionInfo() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 5;</code>
     * @return this
     */
    public PlayerRecordInfo clearCollectionInfo() {
      bitField0_ &= ~0x00000100;
      collectionInfo.clear();
      return this;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 5;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableCollectionInfo()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public PlayerCollectionInfoOuterClass.PlayerCollectionInfo getCollectionInfo() {
      return collectionInfo;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 5;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public PlayerCollectionInfoOuterClass.PlayerCollectionInfo getMutableCollectionInfo() {
      bitField0_ |= 0x00000100;
      return collectionInfo;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 5;</code>
     * @param value the collectionInfo to set
     * @return this
     */
    public PlayerRecordInfo setCollectionInfo(
        final PlayerCollectionInfoOuterClass.PlayerCollectionInfo value) {
      bitField0_ |= 0x00000100;
      collectionInfo.copyFrom(value);
      return this;
    }

    @Override
    public PlayerRecordInfo copyFrom(final PlayerRecordInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        fABJGCEEABG = other.fABJGCEEABG;
        jEMLCOOOBOO = other.jEMLCOOOBOO;
        hMHGEDPFEBA = other.hMHGEDPFEBA;
        jIOMBOMGDHP = other.jIOMBOMGDHP;
        hEFKKIANPJE = other.hEFKKIANPJE;
        iNNBJJFDEBD = other.iNNBJJFDEBD;
        mBBDPBOOEAP = other.mBBDPBOOEAP;
        kNJPGKKOEDD = other.kNJPGKKOEDD;
        collectionInfo.copyFrom(other.collectionInfo);
      }
      return this;
    }

    @Override
    public PlayerRecordInfo mergeFrom(final PlayerRecordInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasFABJGCEEABG()) {
        setFABJGCEEABG(other.fABJGCEEABG);
      }
      if (other.hasJEMLCOOOBOO()) {
        setJEMLCOOOBOO(other.jEMLCOOOBOO);
      }
      if (other.hasHMHGEDPFEBA()) {
        setHMHGEDPFEBA(other.hMHGEDPFEBA);
      }
      if (other.hasJIOMBOMGDHP()) {
        setJIOMBOMGDHP(other.jIOMBOMGDHP);
      }
      if (other.hasHEFKKIANPJE()) {
        setHEFKKIANPJE(other.hEFKKIANPJE);
      }
      if (other.hasINNBJJFDEBD()) {
        setINNBJJFDEBD(other.iNNBJJFDEBD);
      }
      if (other.hasMBBDPBOOEAP()) {
        setMBBDPBOOEAP(other.mBBDPBOOEAP);
      }
      if (other.hasKNJPGKKOEDD()) {
        setKNJPGKKOEDD(other.kNJPGKKOEDD);
      }
      if (other.hasCollectionInfo()) {
        getMutableCollectionInfo().mergeFrom(other.collectionInfo);
      }
      return this;
    }

    @Override
    public PlayerRecordInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      fABJGCEEABG = 0;
      jEMLCOOOBOO = 0;
      hMHGEDPFEBA = 0;
      jIOMBOMGDHP = 0;
      hEFKKIANPJE = 0;
      iNNBJJFDEBD = 0;
      mBBDPBOOEAP = 0;
      kNJPGKKOEDD = 0;
      collectionInfo.clear();
      return this;
    }

    @Override
    public PlayerRecordInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      collectionInfo.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerRecordInfo)) {
        return false;
      }
      PlayerRecordInfo other = (PlayerRecordInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasFABJGCEEABG() || fABJGCEEABG == other.fABJGCEEABG)
        && (!hasJEMLCOOOBOO() || jEMLCOOOBOO == other.jEMLCOOOBOO)
        && (!hasHMHGEDPFEBA() || hMHGEDPFEBA == other.hMHGEDPFEBA)
        && (!hasJIOMBOMGDHP() || jIOMBOMGDHP == other.jIOMBOMGDHP)
        && (!hasHEFKKIANPJE() || hEFKKIANPJE == other.hEFKKIANPJE)
        && (!hasINNBJJFDEBD() || iNNBJJFDEBD == other.iNNBJJFDEBD)
        && (!hasMBBDPBOOEAP() || mBBDPBOOEAP == other.mBBDPBOOEAP)
        && (!hasKNJPGKKOEDD() || kNJPGKKOEDD == other.kNJPGKKOEDD)
        && (!hasCollectionInfo() || collectionInfo.equals(other.collectionInfo));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(fABJGCEEABG);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(jEMLCOOOBOO);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(hMHGEDPFEBA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(jIOMBOMGDHP);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(hEFKKIANPJE);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(iNNBJJFDEBD);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(mBBDPBOOEAP);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(kNJPGKKOEDD);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 42);
        output.writeMessageNoTag(collectionInfo);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(fABJGCEEABG);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jEMLCOOOBOO);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hMHGEDPFEBA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jIOMBOMGDHP);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hEFKKIANPJE);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(iNNBJJFDEBD);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(mBBDPBOOEAP);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kNJPGKKOEDD);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(collectionInfo);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerRecordInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // fABJGCEEABG
            fABJGCEEABG = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // jEMLCOOOBOO
            jEMLCOOOBOO = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // hMHGEDPFEBA
            hMHGEDPFEBA = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // jIOMBOMGDHP
            jIOMBOMGDHP = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // hEFKKIANPJE
            hEFKKIANPJE = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // iNNBJJFDEBD
            iNNBJJFDEBD = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // mBBDPBOOEAP
            mBBDPBOOEAP = input.readUInt32();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // kNJPGKKOEDD
            kNJPGKKOEDD = input.readUInt32();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 42) {
              break;
            }
          }
          case 42: {
            // collectionInfo
            input.readMessage(collectionInfo);
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.fABJGCEEABG, fABJGCEEABG);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.jEMLCOOOBOO, jEMLCOOOBOO);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.hMHGEDPFEBA, hMHGEDPFEBA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.jIOMBOMGDHP, jIOMBOMGDHP);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.hEFKKIANPJE, hEFKKIANPJE);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.iNNBJJFDEBD, iNNBJJFDEBD);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeUInt32(FieldNames.mBBDPBOOEAP, mBBDPBOOEAP);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeUInt32(FieldNames.kNJPGKKOEDD, kNJPGKKOEDD);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeMessage(FieldNames.collectionInfo, collectionInfo);
      }
      output.endObject();
    }

    @Override
    public PlayerRecordInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 537264295: {
            if (input.isAtField(FieldNames.fABJGCEEABG)) {
              if (!input.trySkipNullValue()) {
                fABJGCEEABG = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1260100228: {
            if (input.isAtField(FieldNames.jEMLCOOOBOO)) {
              if (!input.trySkipNullValue()) {
                jEMLCOOOBOO = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1749307637: {
            if (input.isAtField(FieldNames.hMHGEDPFEBA)) {
              if (!input.trySkipNullValue()) {
                hMHGEDPFEBA = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -512872888: {
            if (input.isAtField(FieldNames.jIOMBOMGDHP)) {
              if (!input.trySkipNullValue()) {
                jIOMBOMGDHP = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1316354338: {
            if (input.isAtField(FieldNames.hEFKKIANPJE)) {
              if (!input.trySkipNullValue()) {
                hEFKKIANPJE = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1521683248: {
            if (input.isAtField(FieldNames.iNNBJJFDEBD)) {
              if (!input.trySkipNullValue()) {
                iNNBJJFDEBD = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1841427925: {
            if (input.isAtField(FieldNames.mBBDPBOOEAP)) {
              if (!input.trySkipNullValue()) {
                mBBDPBOOEAP = input.readUInt32();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1885163724: {
            if (input.isAtField(FieldNames.kNJPGKKOEDD)) {
              if (!input.trySkipNullValue()) {
                kNJPGKKOEDD = input.readUInt32();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 310642796:
          case 1060168111: {
            if (input.isAtField(FieldNames.collectionInfo)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(collectionInfo);
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerRecordInfo clone() {
      return new PlayerRecordInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerRecordInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerRecordInfo(), data).checkInitialized();
    }

    public static PlayerRecordInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerRecordInfo(), input).checkInitialized();
    }

    public static PlayerRecordInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerRecordInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerRecordInfo messages
     */
    public static MessageFactory<PlayerRecordInfo> getFactory() {
      return PlayerRecordInfoFactory.INSTANCE;
    }

    private enum PlayerRecordInfoFactory implements MessageFactory<PlayerRecordInfo> {
      INSTANCE;

      @Override
      public PlayerRecordInfo create() {
        return PlayerRecordInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName fABJGCEEABG = FieldName.forField("FABJGCEEABG");

      static final FieldName jEMLCOOOBOO = FieldName.forField("JEMLCOOOBOO");

      static final FieldName hMHGEDPFEBA = FieldName.forField("HMHGEDPFEBA");

      static final FieldName jIOMBOMGDHP = FieldName.forField("JIOMBOMGDHP");

      static final FieldName hEFKKIANPJE = FieldName.forField("HEFKKIANPJE");

      static final FieldName iNNBJJFDEBD = FieldName.forField("INNBJJFDEBD");

      static final FieldName mBBDPBOOEAP = FieldName.forField("MBBDPBOOEAP");

      static final FieldName kNJPGKKOEDD = FieldName.forField("KNJPGKKOEDD");

      static final FieldName collectionInfo = FieldName.forField("collectionInfo", "collection_info");
    }
  }
}
