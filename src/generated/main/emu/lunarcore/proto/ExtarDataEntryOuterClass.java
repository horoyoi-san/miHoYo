// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class ExtarDataEntryOuterClass {
  /**
   * Protobuf type {@code ExtarDataEntry}
   */
  public static final class ExtarDataEntry extends ProtoMessage<ExtarDataEntry> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 CPPDJFKIIHK = 2;</code>
     */
    private int cPPDJFKIIHK;

    /**
     * <code>optional uint32 BLOGJDCKAHM = 6;</code>
     */
    private int bLOGJDCKAHM;

    private ExtarDataEntry() {
    }

    /**
     * @return a new empty instance of {@code ExtarDataEntry}
     */
    public static ExtarDataEntry newInstance() {
      return new ExtarDataEntry();
    }

    /**
     * <code>optional uint32 CPPDJFKIIHK = 2;</code>
     * @return whether the cPPDJFKIIHK field is set
     */
    public boolean hasCPPDJFKIIHK() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 CPPDJFKIIHK = 2;</code>
     * @return this
     */
    public ExtarDataEntry clearCPPDJFKIIHK() {
      bitField0_ &= ~0x00000001;
      cPPDJFKIIHK = 0;
      return this;
    }

    /**
     * <code>optional uint32 CPPDJFKIIHK = 2;</code>
     * @return the cPPDJFKIIHK
     */
    public int getCPPDJFKIIHK() {
      return cPPDJFKIIHK;
    }

    /**
     * <code>optional uint32 CPPDJFKIIHK = 2;</code>
     * @param value the cPPDJFKIIHK to set
     * @return this
     */
    public ExtarDataEntry setCPPDJFKIIHK(final int value) {
      bitField0_ |= 0x00000001;
      cPPDJFKIIHK = value;
      return this;
    }

    /**
     * <code>optional uint32 BLOGJDCKAHM = 6;</code>
     * @return whether the bLOGJDCKAHM field is set
     */
    public boolean hasBLOGJDCKAHM() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 BLOGJDCKAHM = 6;</code>
     * @return this
     */
    public ExtarDataEntry clearBLOGJDCKAHM() {
      bitField0_ &= ~0x00000002;
      bLOGJDCKAHM = 0;
      return this;
    }

    /**
     * <code>optional uint32 BLOGJDCKAHM = 6;</code>
     * @return the bLOGJDCKAHM
     */
    public int getBLOGJDCKAHM() {
      return bLOGJDCKAHM;
    }

    /**
     * <code>optional uint32 BLOGJDCKAHM = 6;</code>
     * @param value the bLOGJDCKAHM to set
     * @return this
     */
    public ExtarDataEntry setBLOGJDCKAHM(final int value) {
      bitField0_ |= 0x00000002;
      bLOGJDCKAHM = value;
      return this;
    }

    @Override
    public ExtarDataEntry copyFrom(final ExtarDataEntry other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        cPPDJFKIIHK = other.cPPDJFKIIHK;
        bLOGJDCKAHM = other.bLOGJDCKAHM;
      }
      return this;
    }

    @Override
    public ExtarDataEntry mergeFrom(final ExtarDataEntry other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasCPPDJFKIIHK()) {
        setCPPDJFKIIHK(other.cPPDJFKIIHK);
      }
      if (other.hasBLOGJDCKAHM()) {
        setBLOGJDCKAHM(other.bLOGJDCKAHM);
      }
      return this;
    }

    @Override
    public ExtarDataEntry clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      cPPDJFKIIHK = 0;
      bLOGJDCKAHM = 0;
      return this;
    }

    @Override
    public ExtarDataEntry clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ExtarDataEntry)) {
        return false;
      }
      ExtarDataEntry other = (ExtarDataEntry) o;
      return bitField0_ == other.bitField0_
        && (!hasCPPDJFKIIHK() || cPPDJFKIIHK == other.cPPDJFKIIHK)
        && (!hasBLOGJDCKAHM() || bLOGJDCKAHM == other.bLOGJDCKAHM);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(cPPDJFKIIHK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(bLOGJDCKAHM);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(cPPDJFKIIHK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(bLOGJDCKAHM);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ExtarDataEntry mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // cPPDJFKIIHK
            cPPDJFKIIHK = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // bLOGJDCKAHM
            bLOGJDCKAHM = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.cPPDJFKIIHK, cPPDJFKIIHK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.bLOGJDCKAHM, bLOGJDCKAHM);
      }
      output.endObject();
    }

    @Override
    public ExtarDataEntry mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 38029041: {
            if (input.isAtField(FieldNames.cPPDJFKIIHK)) {
              if (!input.trySkipNullValue()) {
                cPPDJFKIIHK = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1002390722: {
            if (input.isAtField(FieldNames.bLOGJDCKAHM)) {
              if (!input.trySkipNullValue()) {
                bLOGJDCKAHM = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ExtarDataEntry clone() {
      return new ExtarDataEntry().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ExtarDataEntry parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ExtarDataEntry(), data).checkInitialized();
    }

    public static ExtarDataEntry parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ExtarDataEntry(), input).checkInitialized();
    }

    public static ExtarDataEntry parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ExtarDataEntry(), input).checkInitialized();
    }

    /**
     * @return factory for creating ExtarDataEntry messages
     */
    public static MessageFactory<ExtarDataEntry> getFactory() {
      return ExtarDataEntryFactory.INSTANCE;
    }

    private enum ExtarDataEntryFactory implements MessageFactory<ExtarDataEntry> {
      INSTANCE;

      @Override
      public ExtarDataEntry create() {
        return ExtarDataEntry.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName cPPDJFKIIHK = FieldName.forField("CPPDJFKIIHK");

      static final FieldName bLOGJDCKAHM = FieldName.forField("BLOGJDCKAHM");
    }
  }
}
