// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;

public final class WolfBroGameInfoOuterClass {
  /**
   * Protobuf type {@code WolfBroGameInfo}
   */
  public static final class WolfBroGameInfo extends ProtoMessage<WolfBroGameInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 PPINPEHJFAB = 8;</code>
     */
    private int pPINPEHJFAB;

    /**
     * <code>optional bool HFNEKMMMFHO = 6;</code>
     */
    private boolean hFNEKMMMFHO;

    /**
     * <code>optional .MotionInfo motion = 4;</code>
     */
    private final MotionInfoOuterClass.MotionInfo motion = MotionInfoOuterClass.MotionInfo.newInstance();

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     */
    private final RepeatedMessage<VectorOuterClass.Vector> jBOFIALLOPI = RepeatedMessage.newEmptyInstance(VectorOuterClass.Vector.getFactory());

    private WolfBroGameInfo() {
    }

    /**
     * @return a new empty instance of {@code WolfBroGameInfo}
     */
    public static WolfBroGameInfo newInstance() {
      return new WolfBroGameInfo();
    }

    /**
     * <code>optional uint32 PPINPEHJFAB = 8;</code>
     * @return whether the pPINPEHJFAB field is set
     */
    public boolean hasPPINPEHJFAB() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 PPINPEHJFAB = 8;</code>
     * @return this
     */
    public WolfBroGameInfo clearPPINPEHJFAB() {
      bitField0_ &= ~0x00000001;
      pPINPEHJFAB = 0;
      return this;
    }

    /**
     * <code>optional uint32 PPINPEHJFAB = 8;</code>
     * @return the pPINPEHJFAB
     */
    public int getPPINPEHJFAB() {
      return pPINPEHJFAB;
    }

    /**
     * <code>optional uint32 PPINPEHJFAB = 8;</code>
     * @param value the pPINPEHJFAB to set
     * @return this
     */
    public WolfBroGameInfo setPPINPEHJFAB(final int value) {
      bitField0_ |= 0x00000001;
      pPINPEHJFAB = value;
      return this;
    }

    /**
     * <code>optional bool HFNEKMMMFHO = 6;</code>
     * @return whether the hFNEKMMMFHO field is set
     */
    public boolean hasHFNEKMMMFHO() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool HFNEKMMMFHO = 6;</code>
     * @return this
     */
    public WolfBroGameInfo clearHFNEKMMMFHO() {
      bitField0_ &= ~0x00000002;
      hFNEKMMMFHO = false;
      return this;
    }

    /**
     * <code>optional bool HFNEKMMMFHO = 6;</code>
     * @return the hFNEKMMMFHO
     */
    public boolean getHFNEKMMMFHO() {
      return hFNEKMMMFHO;
    }

    /**
     * <code>optional bool HFNEKMMMFHO = 6;</code>
     * @param value the hFNEKMMMFHO to set
     * @return this
     */
    public WolfBroGameInfo setHFNEKMMMFHO(final boolean value) {
      bitField0_ |= 0x00000002;
      hFNEKMMMFHO = value;
      return this;
    }

    /**
     * <code>optional .MotionInfo motion = 4;</code>
     * @return whether the motion field is set
     */
    public boolean hasMotion() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional .MotionInfo motion = 4;</code>
     * @return this
     */
    public WolfBroGameInfo clearMotion() {
      bitField0_ &= ~0x00000004;
      motion.clear();
      return this;
    }

    /**
     * <code>optional .MotionInfo motion = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableMotion()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public MotionInfoOuterClass.MotionInfo getMotion() {
      return motion;
    }

    /**
     * <code>optional .MotionInfo motion = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public MotionInfoOuterClass.MotionInfo getMutableMotion() {
      bitField0_ |= 0x00000004;
      return motion;
    }

    /**
     * <code>optional .MotionInfo motion = 4;</code>
     * @param value the motion to set
     * @return this
     */
    public WolfBroGameInfo setMotion(final MotionInfoOuterClass.MotionInfo value) {
      bitField0_ |= 0x00000004;
      motion.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     * @return whether the jBOFIALLOPI field is set
     */
    public boolean hasJBOFIALLOPI() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     * @return this
     */
    public WolfBroGameInfo clearJBOFIALLOPI() {
      bitField0_ &= ~0x00000008;
      jBOFIALLOPI.clear();
      return this;
    }

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJBOFIALLOPI()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<VectorOuterClass.Vector> getJBOFIALLOPI() {
      return jBOFIALLOPI;
    }

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<VectorOuterClass.Vector> getMutableJBOFIALLOPI() {
      bitField0_ |= 0x00000008;
      return jBOFIALLOPI;
    }

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     * @param value the jBOFIALLOPI to add
     * @return this
     */
    public WolfBroGameInfo addJBOFIALLOPI(final VectorOuterClass.Vector value) {
      bitField0_ |= 0x00000008;
      jBOFIALLOPI.add(value);
      return this;
    }

    /**
     * <code>repeated .Vector JBOFIALLOPI = 13;</code>
     * @param values the jBOFIALLOPI to add
     * @return this
     */
    public WolfBroGameInfo addAllJBOFIALLOPI(final VectorOuterClass.Vector... values) {
      bitField0_ |= 0x00000008;
      jBOFIALLOPI.addAll(values);
      return this;
    }

    @Override
    public WolfBroGameInfo copyFrom(final WolfBroGameInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        pPINPEHJFAB = other.pPINPEHJFAB;
        hFNEKMMMFHO = other.hFNEKMMMFHO;
        motion.copyFrom(other.motion);
        jBOFIALLOPI.copyFrom(other.jBOFIALLOPI);
      }
      return this;
    }

    @Override
    public WolfBroGameInfo mergeFrom(final WolfBroGameInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasPPINPEHJFAB()) {
        setPPINPEHJFAB(other.pPINPEHJFAB);
      }
      if (other.hasHFNEKMMMFHO()) {
        setHFNEKMMMFHO(other.hFNEKMMMFHO);
      }
      if (other.hasMotion()) {
        getMutableMotion().mergeFrom(other.motion);
      }
      if (other.hasJBOFIALLOPI()) {
        getMutableJBOFIALLOPI().addAll(other.jBOFIALLOPI);
      }
      return this;
    }

    @Override
    public WolfBroGameInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      pPINPEHJFAB = 0;
      hFNEKMMMFHO = false;
      motion.clear();
      jBOFIALLOPI.clear();
      return this;
    }

    @Override
    public WolfBroGameInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      motion.clearQuick();
      jBOFIALLOPI.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WolfBroGameInfo)) {
        return false;
      }
      WolfBroGameInfo other = (WolfBroGameInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasPPINPEHJFAB() || pPINPEHJFAB == other.pPINPEHJFAB)
        && (!hasHFNEKMMMFHO() || hFNEKMMMFHO == other.hFNEKMMMFHO)
        && (!hasMotion() || motion.equals(other.motion))
        && (!hasJBOFIALLOPI() || jBOFIALLOPI.equals(other.jBOFIALLOPI));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(pPINPEHJFAB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 48);
        output.writeBoolNoTag(hFNEKMMMFHO);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 34);
        output.writeMessageNoTag(motion);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < jBOFIALLOPI.length(); i++) {
          output.writeRawByte((byte) 106);
          output.writeMessageNoTag(jBOFIALLOPI.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(pPINPEHJFAB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(motion);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * jBOFIALLOPI.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(jBOFIALLOPI);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WolfBroGameInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 64: {
            // pPINPEHJFAB
            pPINPEHJFAB = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // hFNEKMMMFHO
            hFNEKMMMFHO = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // motion
            input.readMessage(motion);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 106) {
              break;
            }
          }
          case 106: {
            // jBOFIALLOPI
            tag = input.readRepeatedMessage(jBOFIALLOPI, tag);
            bitField0_ |= 0x00000008;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.pPINPEHJFAB, pPINPEHJFAB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.hFNEKMMMFHO, hFNEKMMMFHO);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeMessage(FieldNames.motion, motion);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedMessage(FieldNames.jBOFIALLOPI, jBOFIALLOPI);
      }
      output.endObject();
    }

    @Override
    public WolfBroGameInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -833306869: {
            if (input.isAtField(FieldNames.pPINPEHJFAB)) {
              if (!input.trySkipNullValue()) {
                pPINPEHJFAB = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -534002378: {
            if (input.isAtField(FieldNames.hFNEKMMMFHO)) {
              if (!input.trySkipNullValue()) {
                hFNEKMMMFHO = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1068318794: {
            if (input.isAtField(FieldNames.motion)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(motion);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1231029503: {
            if (input.isAtField(FieldNames.jBOFIALLOPI)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(jBOFIALLOPI);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WolfBroGameInfo clone() {
      return new WolfBroGameInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WolfBroGameInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WolfBroGameInfo(), data).checkInitialized();
    }

    public static WolfBroGameInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameInfo(), input).checkInitialized();
    }

    public static WolfBroGameInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating WolfBroGameInfo messages
     */
    public static MessageFactory<WolfBroGameInfo> getFactory() {
      return WolfBroGameInfoFactory.INSTANCE;
    }

    private enum WolfBroGameInfoFactory implements MessageFactory<WolfBroGameInfo> {
      INSTANCE;

      @Override
      public WolfBroGameInfo create() {
        return WolfBroGameInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName pPINPEHJFAB = FieldName.forField("PPINPEHJFAB");

      static final FieldName hFNEKMMMFHO = FieldName.forField("HFNEKMMMFHO");

      static final FieldName motion = FieldName.forField("motion");

      static final FieldName jBOFIALLOPI = FieldName.forField("JBOFIALLOPI");
    }
  }
}
