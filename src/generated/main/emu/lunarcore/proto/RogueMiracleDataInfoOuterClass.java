// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;

public final class RogueMiracleDataInfoOuterClass {
  /**
   * Protobuf type {@code RogueMiracleDataInfo}
   */
  public static final class RogueMiracleDataInfo extends ProtoMessage<RogueMiracleDataInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 PFOFHEMGFKL = 2;</code>
     */
    private int pFOFHEMGFKL;

    /**
     * <code>optional uint32 COIFBDJBCDE = 4;</code>
     */
    private int cOIFBDJBCDE;

    /**
     * <code>optional uint32 miracle_id = 5;</code>
     */
    private int miracleId;

    /**
     * <code>optional uint32 LJBBGBBKNDE = 13;</code>
     */
    private int lJBBGBBKNDE;

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     */
    private final RepeatedMessage<DPDOKIFJOGBEntry> dPDOKIFJOGB = RepeatedMessage.newEmptyInstance(DPDOKIFJOGBEntry.getFactory());

    private RogueMiracleDataInfo() {
    }

    /**
     * @return a new empty instance of {@code RogueMiracleDataInfo}
     */
    public static RogueMiracleDataInfo newInstance() {
      return new RogueMiracleDataInfo();
    }

    /**
     * <code>optional uint32 PFOFHEMGFKL = 2;</code>
     * @return whether the pFOFHEMGFKL field is set
     */
    public boolean hasPFOFHEMGFKL() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 PFOFHEMGFKL = 2;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearPFOFHEMGFKL() {
      bitField0_ &= ~0x00000001;
      pFOFHEMGFKL = 0;
      return this;
    }

    /**
     * <code>optional uint32 PFOFHEMGFKL = 2;</code>
     * @return the pFOFHEMGFKL
     */
    public int getPFOFHEMGFKL() {
      return pFOFHEMGFKL;
    }

    /**
     * <code>optional uint32 PFOFHEMGFKL = 2;</code>
     * @param value the pFOFHEMGFKL to set
     * @return this
     */
    public RogueMiracleDataInfo setPFOFHEMGFKL(final int value) {
      bitField0_ |= 0x00000001;
      pFOFHEMGFKL = value;
      return this;
    }

    /**
     * <code>optional uint32 COIFBDJBCDE = 4;</code>
     * @return whether the cOIFBDJBCDE field is set
     */
    public boolean hasCOIFBDJBCDE() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 COIFBDJBCDE = 4;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearCOIFBDJBCDE() {
      bitField0_ &= ~0x00000002;
      cOIFBDJBCDE = 0;
      return this;
    }

    /**
     * <code>optional uint32 COIFBDJBCDE = 4;</code>
     * @return the cOIFBDJBCDE
     */
    public int getCOIFBDJBCDE() {
      return cOIFBDJBCDE;
    }

    /**
     * <code>optional uint32 COIFBDJBCDE = 4;</code>
     * @param value the cOIFBDJBCDE to set
     * @return this
     */
    public RogueMiracleDataInfo setCOIFBDJBCDE(final int value) {
      bitField0_ |= 0x00000002;
      cOIFBDJBCDE = value;
      return this;
    }

    /**
     * <code>optional uint32 miracle_id = 5;</code>
     * @return whether the miracleId field is set
     */
    public boolean hasMiracleId() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 miracle_id = 5;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearMiracleId() {
      bitField0_ &= ~0x00000004;
      miracleId = 0;
      return this;
    }

    /**
     * <code>optional uint32 miracle_id = 5;</code>
     * @return the miracleId
     */
    public int getMiracleId() {
      return miracleId;
    }

    /**
     * <code>optional uint32 miracle_id = 5;</code>
     * @param value the miracleId to set
     * @return this
     */
    public RogueMiracleDataInfo setMiracleId(final int value) {
      bitField0_ |= 0x00000004;
      miracleId = value;
      return this;
    }

    /**
     * <code>optional uint32 LJBBGBBKNDE = 13;</code>
     * @return whether the lJBBGBBKNDE field is set
     */
    public boolean hasLJBBGBBKNDE() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 LJBBGBBKNDE = 13;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearLJBBGBBKNDE() {
      bitField0_ &= ~0x00000008;
      lJBBGBBKNDE = 0;
      return this;
    }

    /**
     * <code>optional uint32 LJBBGBBKNDE = 13;</code>
     * @return the lJBBGBBKNDE
     */
    public int getLJBBGBBKNDE() {
      return lJBBGBBKNDE;
    }

    /**
     * <code>optional uint32 LJBBGBBKNDE = 13;</code>
     * @param value the lJBBGBBKNDE to set
     * @return this
     */
    public RogueMiracleDataInfo setLJBBGBBKNDE(final int value) {
      bitField0_ |= 0x00000008;
      lJBBGBBKNDE = value;
      return this;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     * @return whether the dPDOKIFJOGB field is set
     */
    public boolean hasDPDOKIFJOGB() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearDPDOKIFJOGB() {
      bitField0_ &= ~0x00000010;
      dPDOKIFJOGB.clear();
      return this;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableDPDOKIFJOGB()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<DPDOKIFJOGBEntry> getDPDOKIFJOGB() {
      return dPDOKIFJOGB;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<DPDOKIFJOGBEntry> getMutableDPDOKIFJOGB() {
      bitField0_ |= 0x00000010;
      return dPDOKIFJOGB;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     * @param value the dPDOKIFJOGB to add
     * @return this
     */
    public RogueMiracleDataInfo addDPDOKIFJOGB(final DPDOKIFJOGBEntry value) {
      bitField0_ |= 0x00000010;
      dPDOKIFJOGB.add(value);
      return this;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.DPDOKIFJOGBEntry DPDOKIFJOGB = 12;</code>
     * @param values the dPDOKIFJOGB to add
     * @return this
     */
    public RogueMiracleDataInfo addAllDPDOKIFJOGB(final DPDOKIFJOGBEntry... values) {
      bitField0_ |= 0x00000010;
      dPDOKIFJOGB.addAll(values);
      return this;
    }

    @Override
    public RogueMiracleDataInfo copyFrom(final RogueMiracleDataInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        pFOFHEMGFKL = other.pFOFHEMGFKL;
        cOIFBDJBCDE = other.cOIFBDJBCDE;
        miracleId = other.miracleId;
        lJBBGBBKNDE = other.lJBBGBBKNDE;
        dPDOKIFJOGB.copyFrom(other.dPDOKIFJOGB);
      }
      return this;
    }

    @Override
    public RogueMiracleDataInfo mergeFrom(final RogueMiracleDataInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasPFOFHEMGFKL()) {
        setPFOFHEMGFKL(other.pFOFHEMGFKL);
      }
      if (other.hasCOIFBDJBCDE()) {
        setCOIFBDJBCDE(other.cOIFBDJBCDE);
      }
      if (other.hasMiracleId()) {
        setMiracleId(other.miracleId);
      }
      if (other.hasLJBBGBBKNDE()) {
        setLJBBGBBKNDE(other.lJBBGBBKNDE);
      }
      if (other.hasDPDOKIFJOGB()) {
        getMutableDPDOKIFJOGB().addAll(other.dPDOKIFJOGB);
      }
      return this;
    }

    @Override
    public RogueMiracleDataInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      pFOFHEMGFKL = 0;
      cOIFBDJBCDE = 0;
      miracleId = 0;
      lJBBGBBKNDE = 0;
      dPDOKIFJOGB.clear();
      return this;
    }

    @Override
    public RogueMiracleDataInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      dPDOKIFJOGB.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof RogueMiracleDataInfo)) {
        return false;
      }
      RogueMiracleDataInfo other = (RogueMiracleDataInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasPFOFHEMGFKL() || pFOFHEMGFKL == other.pFOFHEMGFKL)
        && (!hasCOIFBDJBCDE() || cOIFBDJBCDE == other.cOIFBDJBCDE)
        && (!hasMiracleId() || miracleId == other.miracleId)
        && (!hasLJBBGBBKNDE() || lJBBGBBKNDE == other.lJBBGBBKNDE)
        && (!hasDPDOKIFJOGB() || dPDOKIFJOGB.equals(other.dPDOKIFJOGB));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(pFOFHEMGFKL);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(cOIFBDJBCDE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(miracleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(lJBBGBBKNDE);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        for (int i = 0; i < dPDOKIFJOGB.length(); i++) {
          output.writeRawByte((byte) 98);
          output.writeMessageNoTag(dPDOKIFJOGB.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(pFOFHEMGFKL);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(cOIFBDJBCDE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(miracleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(lJBBGBBKNDE);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += (1 * dPDOKIFJOGB.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(dPDOKIFJOGB);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public RogueMiracleDataInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // pFOFHEMGFKL
            pFOFHEMGFKL = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // cOIFBDJBCDE
            cOIFBDJBCDE = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // miracleId
            miracleId = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // lJBBGBBKNDE
            lJBBGBBKNDE = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 98) {
              break;
            }
          }
          case 98: {
            // dPDOKIFJOGB
            tag = input.readRepeatedMessage(dPDOKIFJOGB, tag);
            bitField0_ |= 0x00000010;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.pFOFHEMGFKL, pFOFHEMGFKL);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.cOIFBDJBCDE, cOIFBDJBCDE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.miracleId, miracleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.lJBBGBBKNDE, lJBBGBBKNDE);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRepeatedMessage(FieldNames.dPDOKIFJOGB, dPDOKIFJOGB);
      }
      output.endObject();
    }

    @Override
    public RogueMiracleDataInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -686111101: {
            if (input.isAtField(FieldNames.pFOFHEMGFKL)) {
              if (!input.trySkipNullValue()) {
                pFOFHEMGFKL = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 623984161: {
            if (input.isAtField(FieldNames.cOIFBDJBCDE)) {
              if (!input.trySkipNullValue()) {
                cOIFBDJBCDE = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -164571796:
          case -806736983: {
            if (input.isAtField(FieldNames.miracleId)) {
              if (!input.trySkipNullValue()) {
                miracleId = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -216952723: {
            if (input.isAtField(FieldNames.lJBBGBBKNDE)) {
              if (!input.trySkipNullValue()) {
                lJBBGBBKNDE = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1415548305: {
            if (input.isAtField(FieldNames.dPDOKIFJOGB)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(dPDOKIFJOGB);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public RogueMiracleDataInfo clone() {
      return new RogueMiracleDataInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static RogueMiracleDataInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new RogueMiracleDataInfo(), data).checkInitialized();
    }

    public static RogueMiracleDataInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueMiracleDataInfo(), input).checkInitialized();
    }

    public static RogueMiracleDataInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueMiracleDataInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating RogueMiracleDataInfo messages
     */
    public static MessageFactory<RogueMiracleDataInfo> getFactory() {
      return RogueMiracleDataInfoFactory.INSTANCE;
    }

    /**
     * Protobuf type {@code DPDOKIFJOGBEntry}
     */
    public static final class DPDOKIFJOGBEntry extends ProtoMessage<DPDOKIFJOGBEntry> implements Cloneable {
      private static final long serialVersionUID = 0L;

      /**
       * <code>optional uint32 key = 1;</code>
       */
      private int key;

      /**
       * <code>optional uint32 value = 2;</code>
       */
      private int value_;

      private DPDOKIFJOGBEntry() {
      }

      /**
       * @return a new empty instance of {@code DPDOKIFJOGBEntry}
       */
      public static DPDOKIFJOGBEntry newInstance() {
        return new DPDOKIFJOGBEntry();
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @return whether the key field is set
       */
      public boolean hasKey() {
        return (bitField0_ & 0x00000001) != 0;
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @return this
       */
      public DPDOKIFJOGBEntry clearKey() {
        bitField0_ &= ~0x00000001;
        key = 0;
        return this;
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @return the key
       */
      public int getKey() {
        return key;
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public DPDOKIFJOGBEntry setKey(final int value) {
        bitField0_ |= 0x00000001;
        key = value;
        return this;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return whether the value_ field is set
       */
      public boolean hasValue() {
        return (bitField0_ & 0x00000002) != 0;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return this
       */
      public DPDOKIFJOGBEntry clearValue() {
        bitField0_ &= ~0x00000002;
        value_ = 0;
        return this;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return the value_
       */
      public int getValue() {
        return value_;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @param value the value_ to set
       * @return this
       */
      public DPDOKIFJOGBEntry setValue(final int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        return this;
      }

      @Override
      public DPDOKIFJOGBEntry copyFrom(final DPDOKIFJOGBEntry other) {
        cachedSize = other.cachedSize;
        if ((bitField0_ | other.bitField0_) != 0) {
          bitField0_ = other.bitField0_;
          key = other.key;
          value_ = other.value_;
        }
        return this;
      }

      @Override
      public DPDOKIFJOGBEntry mergeFrom(final DPDOKIFJOGBEntry other) {
        if (other.isEmpty()) {
          return this;
        }
        cachedSize = -1;
        if (other.hasKey()) {
          setKey(other.key);
        }
        if (other.hasValue()) {
          setValue(other.value_);
        }
        return this;
      }

      @Override
      public DPDOKIFJOGBEntry clear() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        key = 0;
        value_ = 0;
        return this;
      }

      @Override
      public DPDOKIFJOGBEntry clearQuick() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        return this;
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (!(o instanceof DPDOKIFJOGBEntry)) {
          return false;
        }
        DPDOKIFJOGBEntry other = (DPDOKIFJOGBEntry) o;
        return bitField0_ == other.bitField0_
          && (!hasKey() || key == other.key)
          && (!hasValue() || value_ == other.value_);
      }

      @Override
      public void writeTo(final ProtoSink output) throws IOException {
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeRawByte((byte) 8);
          output.writeUInt32NoTag(key);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeRawByte((byte) 16);
          output.writeUInt32NoTag(value_);
        }
      }

      @Override
      protected int computeSerializedSize() {
        int size = 0;
        if ((bitField0_ & 0x00000001) != 0) {
          size += 1 + ProtoSink.computeUInt32SizeNoTag(key);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          size += 1 + ProtoSink.computeUInt32SizeNoTag(value_);
        }
        return size;
      }

      @Override
      @SuppressWarnings("fallthrough")
      public DPDOKIFJOGBEntry mergeFrom(final ProtoSource input) throws IOException {
        // Enabled Fall-Through Optimization (QuickBuffers)
        int tag = input.readTag();
        while (true) {
          switch (tag) {
            case 8: {
              // key
              key = input.readUInt32();
              bitField0_ |= 0x00000001;
              tag = input.readTag();
              if (tag != 16) {
                break;
              }
            }
            case 16: {
              // value_
              value_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              tag = input.readTag();
              if (tag != 0) {
                break;
              }
            }
            case 0: {
              return this;
            }
            default: {
              if (!input.skipField(tag)) {
                return this;
              }
              tag = input.readTag();
              break;
            }
          }
        }
      }

      @Override
      public void writeTo(final JsonSink output) throws IOException {
        output.beginObject();
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeUInt32(FieldNames.key, key);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeUInt32(FieldNames.value_, value_);
        }
        output.endObject();
      }

      @Override
      public DPDOKIFJOGBEntry mergeFrom(final JsonSource input) throws IOException {
        if (!input.beginObject()) {
          return this;
        }
        while (!input.isAtEnd()) {
          switch (input.readFieldHash()) {
            case 106079: {
              if (input.isAtField(FieldNames.key)) {
                if (!input.trySkipNullValue()) {
                  key = input.readUInt32();
                  bitField0_ |= 0x00000001;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            case 111972721: {
              if (input.isAtField(FieldNames.value_)) {
                if (!input.trySkipNullValue()) {
                  value_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            default: {
              input.skipUnknownField();
              break;
            }
          }
        }
        input.endObject();
        return this;
      }

      @Override
      public DPDOKIFJOGBEntry clone() {
        return new DPDOKIFJOGBEntry().copyFrom(this);
      }

      @Override
      public boolean isEmpty() {
        return ((bitField0_) == 0);
      }

      public static DPDOKIFJOGBEntry parseFrom(final byte[] data) throws
          InvalidProtocolBufferException {
        return ProtoMessage.mergeFrom(new DPDOKIFJOGBEntry(), data).checkInitialized();
      }

      public static DPDOKIFJOGBEntry parseFrom(final ProtoSource input) throws IOException {
        return ProtoMessage.mergeFrom(new DPDOKIFJOGBEntry(), input).checkInitialized();
      }

      public static DPDOKIFJOGBEntry parseFrom(final JsonSource input) throws IOException {
        return ProtoMessage.mergeFrom(new DPDOKIFJOGBEntry(), input).checkInitialized();
      }

      /**
       * @return factory for creating DPDOKIFJOGBEntry messages
       */
      public static MessageFactory<DPDOKIFJOGBEntry> getFactory() {
        return DPDOKIFJOGBEntryFactory.INSTANCE;
      }

      private enum DPDOKIFJOGBEntryFactory implements MessageFactory<DPDOKIFJOGBEntry> {
        INSTANCE;

        @Override
        public DPDOKIFJOGBEntry create() {
          return DPDOKIFJOGBEntry.newInstance();
        }
      }

      /**
       * Contains name constants used for serializing JSON
       */
      static class FieldNames {
        static final FieldName key = FieldName.forField("key");

        static final FieldName value_ = FieldName.forField("value");
      }
    }

    private enum RogueMiracleDataInfoFactory implements MessageFactory<RogueMiracleDataInfo> {
      INSTANCE;

      @Override
      public RogueMiracleDataInfo create() {
        return RogueMiracleDataInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName pFOFHEMGFKL = FieldName.forField("PFOFHEMGFKL");

      static final FieldName cOIFBDJBCDE = FieldName.forField("COIFBDJBCDE");

      static final FieldName miracleId = FieldName.forField("miracleId", "miracle_id");

      static final FieldName lJBBGBBKNDE = FieldName.forField("LJBBGBBKNDE");

      static final FieldName dPDOKIFJOGB = FieldName.forField("DPDOKIFJOGB");
    }
  }
}
