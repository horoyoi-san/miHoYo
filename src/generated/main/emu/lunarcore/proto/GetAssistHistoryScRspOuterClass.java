// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;

public final class GetAssistHistoryScRspOuterClass {
  /**
   * Protobuf type {@code GetAssistHistoryScRsp}
   */
  public static final class GetAssistHistoryScRsp extends ProtoMessage<GetAssistHistoryScRsp> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 OMHCHJLLIIF = 2;</code>
     */
    private int oMHCHJLLIIF;

    /**
     * <code>optional uint32 NFJJAPNPPKP = 7;</code>
     */
    private int nFJJAPNPPKP;

    /**
     * <code>optional uint32 retcode = 11;</code>
     */
    private int retcode;

    /**
     * <code>optional uint32 PBFNEIGOPMP = 14;</code>
     */
    private int pBFNEIGOPMP;

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     */
    private final RepeatedInt todayUseUidList = RepeatedInt.newEmptyInstance();

    private GetAssistHistoryScRsp() {
    }

    /**
     * @return a new empty instance of {@code GetAssistHistoryScRsp}
     */
    public static GetAssistHistoryScRsp newInstance() {
      return new GetAssistHistoryScRsp();
    }

    /**
     * <code>optional uint32 OMHCHJLLIIF = 2;</code>
     * @return whether the oMHCHJLLIIF field is set
     */
    public boolean hasOMHCHJLLIIF() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 OMHCHJLLIIF = 2;</code>
     * @return this
     */
    public GetAssistHistoryScRsp clearOMHCHJLLIIF() {
      bitField0_ &= ~0x00000001;
      oMHCHJLLIIF = 0;
      return this;
    }

    /**
     * <code>optional uint32 OMHCHJLLIIF = 2;</code>
     * @return the oMHCHJLLIIF
     */
    public int getOMHCHJLLIIF() {
      return oMHCHJLLIIF;
    }

    /**
     * <code>optional uint32 OMHCHJLLIIF = 2;</code>
     * @param value the oMHCHJLLIIF to set
     * @return this
     */
    public GetAssistHistoryScRsp setOMHCHJLLIIF(final int value) {
      bitField0_ |= 0x00000001;
      oMHCHJLLIIF = value;
      return this;
    }

    /**
     * <code>optional uint32 NFJJAPNPPKP = 7;</code>
     * @return whether the nFJJAPNPPKP field is set
     */
    public boolean hasNFJJAPNPPKP() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 NFJJAPNPPKP = 7;</code>
     * @return this
     */
    public GetAssistHistoryScRsp clearNFJJAPNPPKP() {
      bitField0_ &= ~0x00000002;
      nFJJAPNPPKP = 0;
      return this;
    }

    /**
     * <code>optional uint32 NFJJAPNPPKP = 7;</code>
     * @return the nFJJAPNPPKP
     */
    public int getNFJJAPNPPKP() {
      return nFJJAPNPPKP;
    }

    /**
     * <code>optional uint32 NFJJAPNPPKP = 7;</code>
     * @param value the nFJJAPNPPKP to set
     * @return this
     */
    public GetAssistHistoryScRsp setNFJJAPNPPKP(final int value) {
      bitField0_ |= 0x00000002;
      nFJJAPNPPKP = value;
      return this;
    }

    /**
     * <code>optional uint32 retcode = 11;</code>
     * @return whether the retcode field is set
     */
    public boolean hasRetcode() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 retcode = 11;</code>
     * @return this
     */
    public GetAssistHistoryScRsp clearRetcode() {
      bitField0_ &= ~0x00000004;
      retcode = 0;
      return this;
    }

    /**
     * <code>optional uint32 retcode = 11;</code>
     * @return the retcode
     */
    public int getRetcode() {
      return retcode;
    }

    /**
     * <code>optional uint32 retcode = 11;</code>
     * @param value the retcode to set
     * @return this
     */
    public GetAssistHistoryScRsp setRetcode(final int value) {
      bitField0_ |= 0x00000004;
      retcode = value;
      return this;
    }

    /**
     * <code>optional uint32 PBFNEIGOPMP = 14;</code>
     * @return whether the pBFNEIGOPMP field is set
     */
    public boolean hasPBFNEIGOPMP() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 PBFNEIGOPMP = 14;</code>
     * @return this
     */
    public GetAssistHistoryScRsp clearPBFNEIGOPMP() {
      bitField0_ &= ~0x00000008;
      pBFNEIGOPMP = 0;
      return this;
    }

    /**
     * <code>optional uint32 PBFNEIGOPMP = 14;</code>
     * @return the pBFNEIGOPMP
     */
    public int getPBFNEIGOPMP() {
      return pBFNEIGOPMP;
    }

    /**
     * <code>optional uint32 PBFNEIGOPMP = 14;</code>
     * @param value the pBFNEIGOPMP to set
     * @return this
     */
    public GetAssistHistoryScRsp setPBFNEIGOPMP(final int value) {
      bitField0_ |= 0x00000008;
      pBFNEIGOPMP = value;
      return this;
    }

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     * @return whether the todayUseUidList field is set
     */
    public boolean hasTodayUseUidList() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     * @return this
     */
    public GetAssistHistoryScRsp clearTodayUseUidList() {
      bitField0_ &= ~0x00000010;
      todayUseUidList.clear();
      return this;
    }

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableTodayUseUidList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getTodayUseUidList() {
      return todayUseUidList;
    }

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableTodayUseUidList() {
      bitField0_ |= 0x00000010;
      return todayUseUidList;
    }

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     * @param value the todayUseUidList to add
     * @return this
     */
    public GetAssistHistoryScRsp addTodayUseUidList(final int value) {
      bitField0_ |= 0x00000010;
      todayUseUidList.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 today_use_uid_list = 10;</code>
     * @param values the todayUseUidList to add
     * @return this
     */
    public GetAssistHistoryScRsp addAllTodayUseUidList(final int... values) {
      bitField0_ |= 0x00000010;
      todayUseUidList.addAll(values);
      return this;
    }

    @Override
    public GetAssistHistoryScRsp copyFrom(final GetAssistHistoryScRsp other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        oMHCHJLLIIF = other.oMHCHJLLIIF;
        nFJJAPNPPKP = other.nFJJAPNPPKP;
        retcode = other.retcode;
        pBFNEIGOPMP = other.pBFNEIGOPMP;
        todayUseUidList.copyFrom(other.todayUseUidList);
      }
      return this;
    }

    @Override
    public GetAssistHistoryScRsp mergeFrom(final GetAssistHistoryScRsp other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasOMHCHJLLIIF()) {
        setOMHCHJLLIIF(other.oMHCHJLLIIF);
      }
      if (other.hasNFJJAPNPPKP()) {
        setNFJJAPNPPKP(other.nFJJAPNPPKP);
      }
      if (other.hasRetcode()) {
        setRetcode(other.retcode);
      }
      if (other.hasPBFNEIGOPMP()) {
        setPBFNEIGOPMP(other.pBFNEIGOPMP);
      }
      if (other.hasTodayUseUidList()) {
        getMutableTodayUseUidList().addAll(other.todayUseUidList);
      }
      return this;
    }

    @Override
    public GetAssistHistoryScRsp clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      oMHCHJLLIIF = 0;
      nFJJAPNPPKP = 0;
      retcode = 0;
      pBFNEIGOPMP = 0;
      todayUseUidList.clear();
      return this;
    }

    @Override
    public GetAssistHistoryScRsp clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      todayUseUidList.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof GetAssistHistoryScRsp)) {
        return false;
      }
      GetAssistHistoryScRsp other = (GetAssistHistoryScRsp) o;
      return bitField0_ == other.bitField0_
        && (!hasOMHCHJLLIIF() || oMHCHJLLIIF == other.oMHCHJLLIIF)
        && (!hasNFJJAPNPPKP() || nFJJAPNPPKP == other.nFJJAPNPPKP)
        && (!hasRetcode() || retcode == other.retcode)
        && (!hasPBFNEIGOPMP() || pBFNEIGOPMP == other.pBFNEIGOPMP)
        && (!hasTodayUseUidList() || todayUseUidList.equals(other.todayUseUidList));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(oMHCHJLLIIF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt32NoTag(nFJJAPNPPKP);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(retcode);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(pBFNEIGOPMP);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        for (int i = 0; i < todayUseUidList.length(); i++) {
          output.writeRawByte((byte) 80);
          output.writeUInt32NoTag(todayUseUidList.array()[i]);
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(oMHCHJLLIIF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nFJJAPNPPKP);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(retcode);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(pBFNEIGOPMP);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += (1 * todayUseUidList.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(todayUseUidList);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public GetAssistHistoryScRsp mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // oMHCHJLLIIF
            oMHCHJLLIIF = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // nFJJAPNPPKP
            nFJJAPNPPKP = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // retcode
            retcode = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // pBFNEIGOPMP
            pBFNEIGOPMP = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 82) {
              break;
            }
          }
          case 82: {
            // todayUseUidList [packed=true]
            input.readPackedUInt32(todayUseUidList, tag);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 80: {
            // todayUseUidList [packed=false]
            tag = input.readRepeatedUInt32(todayUseUidList, tag);
            bitField0_ |= 0x00000010;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.oMHCHJLLIIF, oMHCHJLLIIF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.nFJJAPNPPKP, nFJJAPNPPKP);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.retcode, retcode);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.pBFNEIGOPMP, pBFNEIGOPMP);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRepeatedUInt32(FieldNames.todayUseUidList, todayUseUidList);
      }
      output.endObject();
    }

    @Override
    public GetAssistHistoryScRsp mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1288564629: {
            if (input.isAtField(FieldNames.oMHCHJLLIIF)) {
              if (!input.trySkipNullValue()) {
                oMHCHJLLIIF = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 134999532: {
            if (input.isAtField(FieldNames.nFJJAPNPPKP)) {
              if (!input.trySkipNullValue()) {
                nFJJAPNPPKP = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1097936398: {
            if (input.isAtField(FieldNames.retcode)) {
              if (!input.trySkipNullValue()) {
                retcode = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1986424429: {
            if (input.isAtField(FieldNames.pBFNEIGOPMP)) {
              if (!input.trySkipNullValue()) {
                pBFNEIGOPMP = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 409484200:
          case 587786019: {
            if (input.isAtField(FieldNames.todayUseUidList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(todayUseUidList);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public GetAssistHistoryScRsp clone() {
      return new GetAssistHistoryScRsp().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static GetAssistHistoryScRsp parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new GetAssistHistoryScRsp(), data).checkInitialized();
    }

    public static GetAssistHistoryScRsp parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new GetAssistHistoryScRsp(), input).checkInitialized();
    }

    public static GetAssistHistoryScRsp parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new GetAssistHistoryScRsp(), input).checkInitialized();
    }

    /**
     * @return factory for creating GetAssistHistoryScRsp messages
     */
    public static MessageFactory<GetAssistHistoryScRsp> getFactory() {
      return GetAssistHistoryScRspFactory.INSTANCE;
    }

    private enum GetAssistHistoryScRspFactory implements MessageFactory<GetAssistHistoryScRsp> {
      INSTANCE;

      @Override
      public GetAssistHistoryScRsp create() {
        return GetAssistHistoryScRsp.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName oMHCHJLLIIF = FieldName.forField("OMHCHJLLIIF");

      static final FieldName nFJJAPNPPKP = FieldName.forField("NFJJAPNPPKP");

      static final FieldName retcode = FieldName.forField("retcode");

      static final FieldName pBFNEIGOPMP = FieldName.forField("PBFNEIGOPMP");

      static final FieldName todayUseUidList = FieldName.forField("todayUseUidList", "today_use_uid_list");
    }
  }
}
