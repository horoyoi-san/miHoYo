// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerSettingInfoOuterClass {
  /**
   * Protobuf type {@code PlayerSettingInfo}
   */
  public static final class PlayerSettingInfo extends ProtoMessage<PlayerSettingInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional bool NJFMILJOFOK = 1;</code>
     */
    private boolean nJFMILJOFOK;

    /**
     * <code>optional bool MMMNJCHEMFN = 2;</code>
     */
    private boolean mMMNJCHEMFN;

    /**
     * <code>optional bool APONEIDMPHL = 3;</code>
     */
    private boolean aPONEIDMPHL;

    /**
     * <code>optional bool KAPDIMGJLNF = 5;</code>
     */
    private boolean kAPDIMGJLNF;

    /**
     * <code>optional bool KJNCCKHJFHE = 7;</code>
     */
    private boolean kJNCCKHJFHE;

    /**
     * <code>optional bool NDJIFCKKJKO = 8;</code>
     */
    private boolean nDJIFCKKJKO;

    /**
     * <code>optional bool AICNFAOBCPI = 9;</code>
     */
    private boolean aICNFAOBCPI;

    /**
     * <code>optional bool NKEKIBNJMPA = 10;</code>
     */
    private boolean nKEKIBNJMPA;

    /**
     * <code>optional bool GMJANOJMKCE = 11;</code>
     */
    private boolean gMJANOJMKCE;

    /**
     * <code>optional bool PBKBGLHHKPE = 12;</code>
     */
    private boolean pBKBGLHHKPE;

    private PlayerSettingInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerSettingInfo}
     */
    public static PlayerSettingInfo newInstance() {
      return new PlayerSettingInfo();
    }

    /**
     * <code>optional bool NJFMILJOFOK = 1;</code>
     * @return whether the nJFMILJOFOK field is set
     */
    public boolean hasNJFMILJOFOK() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional bool NJFMILJOFOK = 1;</code>
     * @return this
     */
    public PlayerSettingInfo clearNJFMILJOFOK() {
      bitField0_ &= ~0x00000001;
      nJFMILJOFOK = false;
      return this;
    }

    /**
     * <code>optional bool NJFMILJOFOK = 1;</code>
     * @return the nJFMILJOFOK
     */
    public boolean getNJFMILJOFOK() {
      return nJFMILJOFOK;
    }

    /**
     * <code>optional bool NJFMILJOFOK = 1;</code>
     * @param value the nJFMILJOFOK to set
     * @return this
     */
    public PlayerSettingInfo setNJFMILJOFOK(final boolean value) {
      bitField0_ |= 0x00000001;
      nJFMILJOFOK = value;
      return this;
    }

    /**
     * <code>optional bool MMMNJCHEMFN = 2;</code>
     * @return whether the mMMNJCHEMFN field is set
     */
    public boolean hasMMMNJCHEMFN() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool MMMNJCHEMFN = 2;</code>
     * @return this
     */
    public PlayerSettingInfo clearMMMNJCHEMFN() {
      bitField0_ &= ~0x00000002;
      mMMNJCHEMFN = false;
      return this;
    }

    /**
     * <code>optional bool MMMNJCHEMFN = 2;</code>
     * @return the mMMNJCHEMFN
     */
    public boolean getMMMNJCHEMFN() {
      return mMMNJCHEMFN;
    }

    /**
     * <code>optional bool MMMNJCHEMFN = 2;</code>
     * @param value the mMMNJCHEMFN to set
     * @return this
     */
    public PlayerSettingInfo setMMMNJCHEMFN(final boolean value) {
      bitField0_ |= 0x00000002;
      mMMNJCHEMFN = value;
      return this;
    }

    /**
     * <code>optional bool APONEIDMPHL = 3;</code>
     * @return whether the aPONEIDMPHL field is set
     */
    public boolean hasAPONEIDMPHL() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool APONEIDMPHL = 3;</code>
     * @return this
     */
    public PlayerSettingInfo clearAPONEIDMPHL() {
      bitField0_ &= ~0x00000004;
      aPONEIDMPHL = false;
      return this;
    }

    /**
     * <code>optional bool APONEIDMPHL = 3;</code>
     * @return the aPONEIDMPHL
     */
    public boolean getAPONEIDMPHL() {
      return aPONEIDMPHL;
    }

    /**
     * <code>optional bool APONEIDMPHL = 3;</code>
     * @param value the aPONEIDMPHL to set
     * @return this
     */
    public PlayerSettingInfo setAPONEIDMPHL(final boolean value) {
      bitField0_ |= 0x00000004;
      aPONEIDMPHL = value;
      return this;
    }

    /**
     * <code>optional bool KAPDIMGJLNF = 5;</code>
     * @return whether the kAPDIMGJLNF field is set
     */
    public boolean hasKAPDIMGJLNF() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool KAPDIMGJLNF = 5;</code>
     * @return this
     */
    public PlayerSettingInfo clearKAPDIMGJLNF() {
      bitField0_ &= ~0x00000008;
      kAPDIMGJLNF = false;
      return this;
    }

    /**
     * <code>optional bool KAPDIMGJLNF = 5;</code>
     * @return the kAPDIMGJLNF
     */
    public boolean getKAPDIMGJLNF() {
      return kAPDIMGJLNF;
    }

    /**
     * <code>optional bool KAPDIMGJLNF = 5;</code>
     * @param value the kAPDIMGJLNF to set
     * @return this
     */
    public PlayerSettingInfo setKAPDIMGJLNF(final boolean value) {
      bitField0_ |= 0x00000008;
      kAPDIMGJLNF = value;
      return this;
    }

    /**
     * <code>optional bool KJNCCKHJFHE = 7;</code>
     * @return whether the kJNCCKHJFHE field is set
     */
    public boolean hasKJNCCKHJFHE() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool KJNCCKHJFHE = 7;</code>
     * @return this
     */
    public PlayerSettingInfo clearKJNCCKHJFHE() {
      bitField0_ &= ~0x00000010;
      kJNCCKHJFHE = false;
      return this;
    }

    /**
     * <code>optional bool KJNCCKHJFHE = 7;</code>
     * @return the kJNCCKHJFHE
     */
    public boolean getKJNCCKHJFHE() {
      return kJNCCKHJFHE;
    }

    /**
     * <code>optional bool KJNCCKHJFHE = 7;</code>
     * @param value the kJNCCKHJFHE to set
     * @return this
     */
    public PlayerSettingInfo setKJNCCKHJFHE(final boolean value) {
      bitField0_ |= 0x00000010;
      kJNCCKHJFHE = value;
      return this;
    }

    /**
     * <code>optional bool NDJIFCKKJKO = 8;</code>
     * @return whether the nDJIFCKKJKO field is set
     */
    public boolean hasNDJIFCKKJKO() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional bool NDJIFCKKJKO = 8;</code>
     * @return this
     */
    public PlayerSettingInfo clearNDJIFCKKJKO() {
      bitField0_ &= ~0x00000020;
      nDJIFCKKJKO = false;
      return this;
    }

    /**
     * <code>optional bool NDJIFCKKJKO = 8;</code>
     * @return the nDJIFCKKJKO
     */
    public boolean getNDJIFCKKJKO() {
      return nDJIFCKKJKO;
    }

    /**
     * <code>optional bool NDJIFCKKJKO = 8;</code>
     * @param value the nDJIFCKKJKO to set
     * @return this
     */
    public PlayerSettingInfo setNDJIFCKKJKO(final boolean value) {
      bitField0_ |= 0x00000020;
      nDJIFCKKJKO = value;
      return this;
    }

    /**
     * <code>optional bool AICNFAOBCPI = 9;</code>
     * @return whether the aICNFAOBCPI field is set
     */
    public boolean hasAICNFAOBCPI() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional bool AICNFAOBCPI = 9;</code>
     * @return this
     */
    public PlayerSettingInfo clearAICNFAOBCPI() {
      bitField0_ &= ~0x00000040;
      aICNFAOBCPI = false;
      return this;
    }

    /**
     * <code>optional bool AICNFAOBCPI = 9;</code>
     * @return the aICNFAOBCPI
     */
    public boolean getAICNFAOBCPI() {
      return aICNFAOBCPI;
    }

    /**
     * <code>optional bool AICNFAOBCPI = 9;</code>
     * @param value the aICNFAOBCPI to set
     * @return this
     */
    public PlayerSettingInfo setAICNFAOBCPI(final boolean value) {
      bitField0_ |= 0x00000040;
      aICNFAOBCPI = value;
      return this;
    }

    /**
     * <code>optional bool NKEKIBNJMPA = 10;</code>
     * @return whether the nKEKIBNJMPA field is set
     */
    public boolean hasNKEKIBNJMPA() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional bool NKEKIBNJMPA = 10;</code>
     * @return this
     */
    public PlayerSettingInfo clearNKEKIBNJMPA() {
      bitField0_ &= ~0x00000080;
      nKEKIBNJMPA = false;
      return this;
    }

    /**
     * <code>optional bool NKEKIBNJMPA = 10;</code>
     * @return the nKEKIBNJMPA
     */
    public boolean getNKEKIBNJMPA() {
      return nKEKIBNJMPA;
    }

    /**
     * <code>optional bool NKEKIBNJMPA = 10;</code>
     * @param value the nKEKIBNJMPA to set
     * @return this
     */
    public PlayerSettingInfo setNKEKIBNJMPA(final boolean value) {
      bitField0_ |= 0x00000080;
      nKEKIBNJMPA = value;
      return this;
    }

    /**
     * <code>optional bool GMJANOJMKCE = 11;</code>
     * @return whether the gMJANOJMKCE field is set
     */
    public boolean hasGMJANOJMKCE() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional bool GMJANOJMKCE = 11;</code>
     * @return this
     */
    public PlayerSettingInfo clearGMJANOJMKCE() {
      bitField0_ &= ~0x00000100;
      gMJANOJMKCE = false;
      return this;
    }

    /**
     * <code>optional bool GMJANOJMKCE = 11;</code>
     * @return the gMJANOJMKCE
     */
    public boolean getGMJANOJMKCE() {
      return gMJANOJMKCE;
    }

    /**
     * <code>optional bool GMJANOJMKCE = 11;</code>
     * @param value the gMJANOJMKCE to set
     * @return this
     */
    public PlayerSettingInfo setGMJANOJMKCE(final boolean value) {
      bitField0_ |= 0x00000100;
      gMJANOJMKCE = value;
      return this;
    }

    /**
     * <code>optional bool PBKBGLHHKPE = 12;</code>
     * @return whether the pBKBGLHHKPE field is set
     */
    public boolean hasPBKBGLHHKPE() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>optional bool PBKBGLHHKPE = 12;</code>
     * @return this
     */
    public PlayerSettingInfo clearPBKBGLHHKPE() {
      bitField0_ &= ~0x00000200;
      pBKBGLHHKPE = false;
      return this;
    }

    /**
     * <code>optional bool PBKBGLHHKPE = 12;</code>
     * @return the pBKBGLHHKPE
     */
    public boolean getPBKBGLHHKPE() {
      return pBKBGLHHKPE;
    }

    /**
     * <code>optional bool PBKBGLHHKPE = 12;</code>
     * @param value the pBKBGLHHKPE to set
     * @return this
     */
    public PlayerSettingInfo setPBKBGLHHKPE(final boolean value) {
      bitField0_ |= 0x00000200;
      pBKBGLHHKPE = value;
      return this;
    }

    @Override
    public PlayerSettingInfo copyFrom(final PlayerSettingInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        nJFMILJOFOK = other.nJFMILJOFOK;
        mMMNJCHEMFN = other.mMMNJCHEMFN;
        aPONEIDMPHL = other.aPONEIDMPHL;
        kAPDIMGJLNF = other.kAPDIMGJLNF;
        kJNCCKHJFHE = other.kJNCCKHJFHE;
        nDJIFCKKJKO = other.nDJIFCKKJKO;
        aICNFAOBCPI = other.aICNFAOBCPI;
        nKEKIBNJMPA = other.nKEKIBNJMPA;
        gMJANOJMKCE = other.gMJANOJMKCE;
        pBKBGLHHKPE = other.pBKBGLHHKPE;
      }
      return this;
    }

    @Override
    public PlayerSettingInfo mergeFrom(final PlayerSettingInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasNJFMILJOFOK()) {
        setNJFMILJOFOK(other.nJFMILJOFOK);
      }
      if (other.hasMMMNJCHEMFN()) {
        setMMMNJCHEMFN(other.mMMNJCHEMFN);
      }
      if (other.hasAPONEIDMPHL()) {
        setAPONEIDMPHL(other.aPONEIDMPHL);
      }
      if (other.hasKAPDIMGJLNF()) {
        setKAPDIMGJLNF(other.kAPDIMGJLNF);
      }
      if (other.hasKJNCCKHJFHE()) {
        setKJNCCKHJFHE(other.kJNCCKHJFHE);
      }
      if (other.hasNDJIFCKKJKO()) {
        setNDJIFCKKJKO(other.nDJIFCKKJKO);
      }
      if (other.hasAICNFAOBCPI()) {
        setAICNFAOBCPI(other.aICNFAOBCPI);
      }
      if (other.hasNKEKIBNJMPA()) {
        setNKEKIBNJMPA(other.nKEKIBNJMPA);
      }
      if (other.hasGMJANOJMKCE()) {
        setGMJANOJMKCE(other.gMJANOJMKCE);
      }
      if (other.hasPBKBGLHHKPE()) {
        setPBKBGLHHKPE(other.pBKBGLHHKPE);
      }
      return this;
    }

    @Override
    public PlayerSettingInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      nJFMILJOFOK = false;
      mMMNJCHEMFN = false;
      aPONEIDMPHL = false;
      kAPDIMGJLNF = false;
      kJNCCKHJFHE = false;
      nDJIFCKKJKO = false;
      aICNFAOBCPI = false;
      nKEKIBNJMPA = false;
      gMJANOJMKCE = false;
      pBKBGLHHKPE = false;
      return this;
    }

    @Override
    public PlayerSettingInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerSettingInfo)) {
        return false;
      }
      PlayerSettingInfo other = (PlayerSettingInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasNJFMILJOFOK() || nJFMILJOFOK == other.nJFMILJOFOK)
        && (!hasMMMNJCHEMFN() || mMMNJCHEMFN == other.mMMNJCHEMFN)
        && (!hasAPONEIDMPHL() || aPONEIDMPHL == other.aPONEIDMPHL)
        && (!hasKAPDIMGJLNF() || kAPDIMGJLNF == other.kAPDIMGJLNF)
        && (!hasKJNCCKHJFHE() || kJNCCKHJFHE == other.kJNCCKHJFHE)
        && (!hasNDJIFCKKJKO() || nDJIFCKKJKO == other.nDJIFCKKJKO)
        && (!hasAICNFAOBCPI() || aICNFAOBCPI == other.aICNFAOBCPI)
        && (!hasNKEKIBNJMPA() || nKEKIBNJMPA == other.nKEKIBNJMPA)
        && (!hasGMJANOJMKCE() || gMJANOJMKCE == other.gMJANOJMKCE)
        && (!hasPBKBGLHHKPE() || pBKBGLHHKPE == other.pBKBGLHHKPE);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeBoolNoTag(nJFMILJOFOK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 16);
        output.writeBoolNoTag(mMMNJCHEMFN);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 24);
        output.writeBoolNoTag(aPONEIDMPHL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 40);
        output.writeBoolNoTag(kAPDIMGJLNF);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 56);
        output.writeBoolNoTag(kJNCCKHJFHE);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 64);
        output.writeBoolNoTag(nDJIFCKKJKO);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 72);
        output.writeBoolNoTag(aICNFAOBCPI);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 80);
        output.writeBoolNoTag(nKEKIBNJMPA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 88);
        output.writeBoolNoTag(gMJANOJMKCE);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRawByte((byte) 96);
        output.writeBoolNoTag(pBKBGLHHKPE);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerSettingInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // nJFMILJOFOK
            nJFMILJOFOK = input.readBool();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
          case 16: {
            // mMMNJCHEMFN
            mMMNJCHEMFN = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 24) {
              break;
            }
          }
          case 24: {
            // aPONEIDMPHL
            aPONEIDMPHL = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // kAPDIMGJLNF
            kAPDIMGJLNF = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // kJNCCKHJFHE
            kJNCCKHJFHE = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // nDJIFCKKJKO
            nDJIFCKKJKO = input.readBool();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // aICNFAOBCPI
            aICNFAOBCPI = input.readBool();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // nKEKIBNJMPA
            nKEKIBNJMPA = input.readBool();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // gMJANOJMKCE
            gMJANOJMKCE = input.readBool();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // pBKBGLHHKPE
            pBKBGLHHKPE = input.readBool();
            bitField0_ |= 0x00000200;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeBool(FieldNames.nJFMILJOFOK, nJFMILJOFOK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.mMMNJCHEMFN, mMMNJCHEMFN);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.aPONEIDMPHL, aPONEIDMPHL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.kAPDIMGJLNF, kAPDIMGJLNF);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.kJNCCKHJFHE, kJNCCKHJFHE);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeBool(FieldNames.nDJIFCKKJKO, nDJIFCKKJKO);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeBool(FieldNames.aICNFAOBCPI, aICNFAOBCPI);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeBool(FieldNames.nKEKIBNJMPA, nKEKIBNJMPA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeBool(FieldNames.gMJANOJMKCE, gMJANOJMKCE);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeBool(FieldNames.pBKBGLHHKPE, pBKBGLHHKPE);
      }
      output.endObject();
    }

    @Override
    public PlayerSettingInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1609104663: {
            if (input.isAtField(FieldNames.nJFMILJOFOK)) {
              if (!input.trySkipNullValue()) {
                nJFMILJOFOK = input.readBool();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1124782014: {
            if (input.isAtField(FieldNames.mMMNJCHEMFN)) {
              if (!input.trySkipNullValue()) {
                mMMNJCHEMFN = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1329650681: {
            if (input.isAtField(FieldNames.aPONEIDMPHL)) {
              if (!input.trySkipNullValue()) {
                aPONEIDMPHL = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 804261779: {
            if (input.isAtField(FieldNames.kAPDIMGJLNF)) {
              if (!input.trySkipNullValue()) {
                kAPDIMGJLNF = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -178656699: {
            if (input.isAtField(FieldNames.kJNCCKHJFHE)) {
              if (!input.trySkipNullValue()) {
                kJNCCKHJFHE = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1447336932: {
            if (input.isAtField(FieldNames.nDJIFCKKJKO)) {
              if (!input.trySkipNullValue()) {
                nDJIFCKKJKO = input.readBool();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -706815749: {
            if (input.isAtField(FieldNames.aICNFAOBCPI)) {
              if (!input.trySkipNullValue()) {
                aICNFAOBCPI = input.readBool();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -548314682: {
            if (input.isAtField(FieldNames.nKEKIBNJMPA)) {
              if (!input.trySkipNullValue()) {
                nKEKIBNJMPA = input.readBool();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1432032916: {
            if (input.isAtField(FieldNames.gMJANOJMKCE)) {
              if (!input.trySkipNullValue()) {
                gMJANOJMKCE = input.readBool();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -333163054: {
            if (input.isAtField(FieldNames.pBKBGLHHKPE)) {
              if (!input.trySkipNullValue()) {
                pBKBGLHHKPE = input.readBool();
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerSettingInfo clone() {
      return new PlayerSettingInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerSettingInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), data).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerSettingInfo messages
     */
    public static MessageFactory<PlayerSettingInfo> getFactory() {
      return PlayerSettingInfoFactory.INSTANCE;
    }

    private enum PlayerSettingInfoFactory implements MessageFactory<PlayerSettingInfo> {
      INSTANCE;

      @Override
      public PlayerSettingInfo create() {
        return PlayerSettingInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName nJFMILJOFOK = FieldName.forField("NJFMILJOFOK");

      static final FieldName mMMNJCHEMFN = FieldName.forField("MMMNJCHEMFN");

      static final FieldName aPONEIDMPHL = FieldName.forField("APONEIDMPHL");

      static final FieldName kAPDIMGJLNF = FieldName.forField("KAPDIMGJLNF");

      static final FieldName kJNCCKHJFHE = FieldName.forField("KJNCCKHJFHE");

      static final FieldName nDJIFCKKJKO = FieldName.forField("NDJIFCKKJKO");

      static final FieldName aICNFAOBCPI = FieldName.forField("AICNFAOBCPI");

      static final FieldName nKEKIBNJMPA = FieldName.forField("NKEKIBNJMPA");

      static final FieldName gMJANOJMKCE = FieldName.forField("GMJANOJMKCE");

      static final FieldName pBKBGLHHKPE = FieldName.forField("PBKBGLHHKPE");
    }
  }
}
