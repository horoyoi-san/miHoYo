// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class GroupStatusOuterClass {
  /**
   * Protobuf type {@code GroupStatus}
   */
  public static final class GroupStatus extends ProtoMessage<GroupStatus> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional int64 HMJOFDKCJII = 11;</code>
     */
    private long hMJOFDKCJII;

    /**
     * <code>optional uint32 group_id = 13;</code>
     */
    private int groupId;

    /**
     * <code>optional .NKEFICJEAOB OMOOHMEEEBD = 9;</code>
     */
    private int oMOOHMEEEBD;

    private GroupStatus() {
    }

    /**
     * @return a new empty instance of {@code GroupStatus}
     */
    public static GroupStatus newInstance() {
      return new GroupStatus();
    }

    /**
     * <code>optional int64 HMJOFDKCJII = 11;</code>
     * @return whether the hMJOFDKCJII field is set
     */
    public boolean hasHMJOFDKCJII() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional int64 HMJOFDKCJII = 11;</code>
     * @return this
     */
    public GroupStatus clearHMJOFDKCJII() {
      bitField0_ &= ~0x00000001;
      hMJOFDKCJII = 0L;
      return this;
    }

    /**
     * <code>optional int64 HMJOFDKCJII = 11;</code>
     * @return the hMJOFDKCJII
     */
    public long getHMJOFDKCJII() {
      return hMJOFDKCJII;
    }

    /**
     * <code>optional int64 HMJOFDKCJII = 11;</code>
     * @param value the hMJOFDKCJII to set
     * @return this
     */
    public GroupStatus setHMJOFDKCJII(final long value) {
      bitField0_ |= 0x00000001;
      hMJOFDKCJII = value;
      return this;
    }

    /**
     * <code>optional uint32 group_id = 13;</code>
     * @return whether the groupId field is set
     */
    public boolean hasGroupId() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 group_id = 13;</code>
     * @return this
     */
    public GroupStatus clearGroupId() {
      bitField0_ &= ~0x00000002;
      groupId = 0;
      return this;
    }

    /**
     * <code>optional uint32 group_id = 13;</code>
     * @return the groupId
     */
    public int getGroupId() {
      return groupId;
    }

    /**
     * <code>optional uint32 group_id = 13;</code>
     * @param value the groupId to set
     * @return this
     */
    public GroupStatus setGroupId(final int value) {
      bitField0_ |= 0x00000002;
      groupId = value;
      return this;
    }

    /**
     * <code>optional .NKEFICJEAOB OMOOHMEEEBD = 9;</code>
     * @return whether the oMOOHMEEEBD field is set
     */
    public boolean hasOMOOHMEEEBD() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional .NKEFICJEAOB OMOOHMEEEBD = 9;</code>
     * @return this
     */
    public GroupStatus clearOMOOHMEEEBD() {
      bitField0_ &= ~0x00000004;
      oMOOHMEEEBD = 0;
      return this;
    }

    /**
     * <code>optional .NKEFICJEAOB OMOOHMEEEBD = 9;</code>
     * @return the oMOOHMEEEBD
     */
    public NKEFICJEAOBOuterClass.NKEFICJEAOB getOMOOHMEEEBD() {
      return NKEFICJEAOBOuterClass.NKEFICJEAOB.forNumber(oMOOHMEEEBD);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link GroupStatus#getOMOOHMEEEBD()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getOMOOHMEEEBDValue() {
      return oMOOHMEEEBD;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link NKEFICJEAOBOuterClass.NKEFICJEAOB}. Setting an invalid value
     * can cause {@link GroupStatus#getOMOOHMEEEBD()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public GroupStatus setOMOOHMEEEBDValue(final int value) {
      bitField0_ |= 0x00000004;
      oMOOHMEEEBD = value;
      return this;
    }

    /**
     * <code>optional .NKEFICJEAOB OMOOHMEEEBD = 9;</code>
     * @param value the oMOOHMEEEBD to set
     * @return this
     */
    public GroupStatus setOMOOHMEEEBD(final NKEFICJEAOBOuterClass.NKEFICJEAOB value) {
      bitField0_ |= 0x00000004;
      oMOOHMEEEBD = value.getNumber();
      return this;
    }

    @Override
    public GroupStatus copyFrom(final GroupStatus other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        hMJOFDKCJII = other.hMJOFDKCJII;
        groupId = other.groupId;
        oMOOHMEEEBD = other.oMOOHMEEEBD;
      }
      return this;
    }

    @Override
    public GroupStatus mergeFrom(final GroupStatus other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasHMJOFDKCJII()) {
        setHMJOFDKCJII(other.hMJOFDKCJII);
      }
      if (other.hasGroupId()) {
        setGroupId(other.groupId);
      }
      if (other.hasOMOOHMEEEBD()) {
        setOMOOHMEEEBDValue(other.oMOOHMEEEBD);
      }
      return this;
    }

    @Override
    public GroupStatus clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      hMJOFDKCJII = 0L;
      groupId = 0;
      oMOOHMEEEBD = 0;
      return this;
    }

    @Override
    public GroupStatus clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof GroupStatus)) {
        return false;
      }
      GroupStatus other = (GroupStatus) o;
      return bitField0_ == other.bitField0_
        && (!hasHMJOFDKCJII() || hMJOFDKCJII == other.hMJOFDKCJII)
        && (!hasGroupId() || groupId == other.groupId)
        && (!hasOMOOHMEEEBD() || oMOOHMEEEBD == other.oMOOHMEEEBD);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 88);
        output.writeInt64NoTag(hMJOFDKCJII);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(groupId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 72);
        output.writeEnumNoTag(oMOOHMEEEBD);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeInt64SizeNoTag(hMJOFDKCJII);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(groupId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(oMOOHMEEEBD);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public GroupStatus mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 88: {
            // hMJOFDKCJII
            hMJOFDKCJII = input.readInt64();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // groupId
            groupId = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // oMOOHMEEEBD
            final int value = input.readInt32();
            if (NKEFICJEAOBOuterClass.NKEFICJEAOB.forNumber(value) != null) {
              oMOOHMEEEBD = value;
              bitField0_ |= 0x00000004;
            }
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeInt64(FieldNames.hMJOFDKCJII, hMJOFDKCJII);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.groupId, groupId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeEnum(FieldNames.oMOOHMEEEBD, oMOOHMEEEBD, NKEFICJEAOBOuterClass.NKEFICJEAOB.converter());
      }
      output.endObject();
    }

    @Override
    public GroupStatus mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 871133258: {
            if (input.isAtField(FieldNames.hMJOFDKCJII)) {
              if (!input.trySkipNullValue()) {
                hMJOFDKCJII = input.readInt64();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 293428218:
          case 506361563: {
            if (input.isAtField(FieldNames.groupId)) {
              if (!input.trySkipNullValue()) {
                groupId = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1537746236: {
            if (input.isAtField(FieldNames.oMOOHMEEEBD)) {
              if (!input.trySkipNullValue()) {
                final NKEFICJEAOBOuterClass.NKEFICJEAOB value = input.readEnum(NKEFICJEAOBOuterClass.NKEFICJEAOB.converter());
                if (value != null) {
                  oMOOHMEEEBD = value.getNumber();
                  bitField0_ |= 0x00000004;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public GroupStatus clone() {
      return new GroupStatus().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static GroupStatus parseFrom(final byte[] data) throws InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new GroupStatus(), data).checkInitialized();
    }

    public static GroupStatus parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new GroupStatus(), input).checkInitialized();
    }

    public static GroupStatus parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new GroupStatus(), input).checkInitialized();
    }

    /**
     * @return factory for creating GroupStatus messages
     */
    public static MessageFactory<GroupStatus> getFactory() {
      return GroupStatusFactory.INSTANCE;
    }

    private enum GroupStatusFactory implements MessageFactory<GroupStatus> {
      INSTANCE;

      @Override
      public GroupStatus create() {
        return GroupStatus.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName hMJOFDKCJII = FieldName.forField("HMJOFDKCJII");

      static final FieldName groupId = FieldName.forField("groupId", "group_id");

      static final FieldName oMOOHMEEEBD = FieldName.forField("OMOOHMEEEBD");
    }
  }
}
