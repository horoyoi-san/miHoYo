// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.Utf8String;

public final class PlayerLoginCsReqOuterClass {
  /**
   * Protobuf type {@code PlayerLoginCsReq}
   */
  public static final class PlayerLoginCsReq extends ProtoMessage<PlayerLoginCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint64 login_random = 8;</code>
     */
    private long loginRandom;

    /**
     * <pre>
     * ？？
     * </pre>
     *
     * <code>optional uint32 client_res_version = 15;</code>
     */
    private int clientResVersion;

    /**
     * <code>optional .PlatformType platform_type = 6;</code>
     */
    private int platformType;

    /**
     * <code>optional .LanguageType language = 14;</code>
     */
    private int language;

    /**
     * <code>optional string rogue_info_data = 1;</code>
     */
    private final Utf8String rogueInfoData = Utf8String.newEmptyInstance();

    /**
     * <code>optional string signature = 11;</code>
     */
    private final Utf8String signature = Utf8String.newEmptyInstance();

    private PlayerLoginCsReq() {
    }

    /**
     * @return a new empty instance of {@code PlayerLoginCsReq}
     */
    public static PlayerLoginCsReq newInstance() {
      return new PlayerLoginCsReq();
    }

    /**
     * <code>optional uint64 login_random = 8;</code>
     * @return whether the loginRandom field is set
     */
    public boolean hasLoginRandom() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint64 login_random = 8;</code>
     * @return this
     */
    public PlayerLoginCsReq clearLoginRandom() {
      bitField0_ &= ~0x00000001;
      loginRandom = 0L;
      return this;
    }

    /**
     * <code>optional uint64 login_random = 8;</code>
     * @return the loginRandom
     */
    public long getLoginRandom() {
      return loginRandom;
    }

    /**
     * <code>optional uint64 login_random = 8;</code>
     * @param value the loginRandom to set
     * @return this
     */
    public PlayerLoginCsReq setLoginRandom(final long value) {
      bitField0_ |= 0x00000001;
      loginRandom = value;
      return this;
    }

    /**
     * <pre>
     * ？？
     * </pre>
     *
     * <code>optional uint32 client_res_version = 15;</code>
     * @return whether the clientResVersion field is set
     */
    public boolean hasClientResVersion() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <pre>
     * ？？
     * </pre>
     *
     * <code>optional uint32 client_res_version = 15;</code>
     * @return this
     */
    public PlayerLoginCsReq clearClientResVersion() {
      bitField0_ &= ~0x00000002;
      clientResVersion = 0;
      return this;
    }

    /**
     * <pre>
     * ？？
     * </pre>
     *
     * <code>optional uint32 client_res_version = 15;</code>
     * @return the clientResVersion
     */
    public int getClientResVersion() {
      return clientResVersion;
    }

    /**
     * <pre>
     * ？？
     * </pre>
     *
     * <code>optional uint32 client_res_version = 15;</code>
     * @param value the clientResVersion to set
     * @return this
     */
    public PlayerLoginCsReq setClientResVersion(final int value) {
      bitField0_ |= 0x00000002;
      clientResVersion = value;
      return this;
    }

    /**
     * <code>optional .PlatformType platform_type = 6;</code>
     * @return whether the platformType field is set
     */
    public boolean hasPlatformType() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional .PlatformType platform_type = 6;</code>
     * @return this
     */
    public PlayerLoginCsReq clearPlatformType() {
      bitField0_ &= ~0x00000004;
      platformType = 0;
      return this;
    }

    /**
     * <code>optional .PlatformType platform_type = 6;</code>
     * @return the platformType
     */
    public PlatformTypeOuterClass.PlatformType getPlatformType() {
      return PlatformTypeOuterClass.PlatformType.forNumber(platformType);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerLoginCsReq#getPlatformType()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getPlatformTypeValue() {
      return platformType;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link PlatformTypeOuterClass.PlatformType}. Setting an invalid value
     * can cause {@link PlayerLoginCsReq#getPlatformType()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerLoginCsReq setPlatformTypeValue(final int value) {
      bitField0_ |= 0x00000004;
      platformType = value;
      return this;
    }

    /**
     * <code>optional .PlatformType platform_type = 6;</code>
     * @param value the platformType to set
     * @return this
     */
    public PlayerLoginCsReq setPlatformType(final PlatformTypeOuterClass.PlatformType value) {
      bitField0_ |= 0x00000004;
      platformType = value.getNumber();
      return this;
    }

    /**
     * <code>optional .LanguageType language = 14;</code>
     * @return whether the language field is set
     */
    public boolean hasLanguage() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional .LanguageType language = 14;</code>
     * @return this
     */
    public PlayerLoginCsReq clearLanguage() {
      bitField0_ &= ~0x00000008;
      language = 0;
      return this;
    }

    /**
     * <code>optional .LanguageType language = 14;</code>
     * @return the language
     */
    public LanguageTypeOuterClass.LanguageType getLanguage() {
      return LanguageTypeOuterClass.LanguageType.forNumber(language);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerLoginCsReq#getLanguage()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getLanguageValue() {
      return language;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link LanguageTypeOuterClass.LanguageType}. Setting an invalid value
     * can cause {@link PlayerLoginCsReq#getLanguage()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerLoginCsReq setLanguageValue(final int value) {
      bitField0_ |= 0x00000008;
      language = value;
      return this;
    }

    /**
     * <code>optional .LanguageType language = 14;</code>
     * @param value the language to set
     * @return this
     */
    public PlayerLoginCsReq setLanguage(final LanguageTypeOuterClass.LanguageType value) {
      bitField0_ |= 0x00000008;
      language = value.getNumber();
      return this;
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @return whether the rogueInfoData field is set
     */
    public boolean hasRogueInfoData() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @return this
     */
    public PlayerLoginCsReq clearRogueInfoData() {
      bitField0_ &= ~0x00000010;
      rogueInfoData.clear();
      return this;
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @return the rogueInfoData
     */
    public String getRogueInfoData() {
      return rogueInfoData.getString();
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @return internal {@code Utf8String} representation of rogueInfoData for reading
     */
    public Utf8String getRogueInfoDataBytes() {
      return this.rogueInfoData;
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @return internal {@code Utf8String} representation of rogueInfoData for modifications
     */
    public Utf8String getMutableRogueInfoDataBytes() {
      bitField0_ |= 0x00000010;
      return this.rogueInfoData;
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @param value the rogueInfoData to set
     * @return this
     */
    public PlayerLoginCsReq setRogueInfoData(final CharSequence value) {
      bitField0_ |= 0x00000010;
      rogueInfoData.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string rogue_info_data = 1;</code>
     * @param value the rogueInfoData to set
     * @return this
     */
    public PlayerLoginCsReq setRogueInfoData(final Utf8String value) {
      bitField0_ |= 0x00000010;
      rogueInfoData.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return whether the signature field is set
     */
    public boolean hasSignature() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return this
     */
    public PlayerLoginCsReq clearSignature() {
      bitField0_ &= ~0x00000020;
      signature.clear();
      return this;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return the signature
     */
    public String getSignature() {
      return signature.getString();
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return internal {@code Utf8String} representation of signature for reading
     */
    public Utf8String getSignatureBytes() {
      return this.signature;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return internal {@code Utf8String} representation of signature for modifications
     */
    public Utf8String getMutableSignatureBytes() {
      bitField0_ |= 0x00000020;
      return this.signature;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @param value the signature to set
     * @return this
     */
    public PlayerLoginCsReq setSignature(final CharSequence value) {
      bitField0_ |= 0x00000020;
      signature.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @param value the signature to set
     * @return this
     */
    public PlayerLoginCsReq setSignature(final Utf8String value) {
      bitField0_ |= 0x00000020;
      signature.copyFrom(value);
      return this;
    }

    @Override
    public PlayerLoginCsReq copyFrom(final PlayerLoginCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        loginRandom = other.loginRandom;
        clientResVersion = other.clientResVersion;
        platformType = other.platformType;
        language = other.language;
        rogueInfoData.copyFrom(other.rogueInfoData);
        signature.copyFrom(other.signature);
      }
      return this;
    }

    @Override
    public PlayerLoginCsReq mergeFrom(final PlayerLoginCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasLoginRandom()) {
        setLoginRandom(other.loginRandom);
      }
      if (other.hasClientResVersion()) {
        setClientResVersion(other.clientResVersion);
      }
      if (other.hasPlatformType()) {
        setPlatformTypeValue(other.platformType);
      }
      if (other.hasLanguage()) {
        setLanguageValue(other.language);
      }
      if (other.hasRogueInfoData()) {
        getMutableRogueInfoDataBytes().copyFrom(other.rogueInfoData);
      }
      if (other.hasSignature()) {
        getMutableSignatureBytes().copyFrom(other.signature);
      }
      return this;
    }

    @Override
    public PlayerLoginCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      loginRandom = 0L;
      clientResVersion = 0;
      platformType = 0;
      language = 0;
      rogueInfoData.clear();
      signature.clear();
      return this;
    }

    @Override
    public PlayerLoginCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      rogueInfoData.clear();
      signature.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerLoginCsReq)) {
        return false;
      }
      PlayerLoginCsReq other = (PlayerLoginCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasLoginRandom() || loginRandom == other.loginRandom)
        && (!hasClientResVersion() || clientResVersion == other.clientResVersion)
        && (!hasPlatformType() || platformType == other.platformType)
        && (!hasLanguage() || language == other.language)
        && (!hasRogueInfoData() || rogueInfoData.equals(other.rogueInfoData))
        && (!hasSignature() || signature.equals(other.signature));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt64NoTag(loginRandom);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 120);
        output.writeUInt32NoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 48);
        output.writeEnumNoTag(platformType);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 112);
        output.writeEnumNoTag(language);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 10);
        output.writeStringNoTag(rogueInfoData);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 90);
        output.writeStringNoTag(signature);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt64SizeNoTag(loginRandom);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(platformType);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(language);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(rogueInfoData);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(signature);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerLoginCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 64: {
            // loginRandom
            loginRandom = input.readUInt64();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // clientResVersion
            clientResVersion = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // platformType
            final int value = input.readInt32();
            if (PlatformTypeOuterClass.PlatformType.forNumber(value) != null) {
              platformType = value;
              bitField0_ |= 0x00000004;
            }
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // language
            final int value = input.readInt32();
            if (LanguageTypeOuterClass.LanguageType.forNumber(value) != null) {
              language = value;
              bitField0_ |= 0x00000008;
            }
            tag = input.readTag();
            if (tag != 10) {
              break;
            }
          }
          case 10: {
            // rogueInfoData
            input.readString(rogueInfoData);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 90) {
              break;
            }
          }
          case 90: {
            // signature
            input.readString(signature);
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt64(FieldNames.loginRandom, loginRandom);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.clientResVersion, clientResVersion);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeEnum(FieldNames.platformType, platformType, PlatformTypeOuterClass.PlatformType.converter());
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeEnum(FieldNames.language, language, LanguageTypeOuterClass.LanguageType.converter());
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeString(FieldNames.rogueInfoData, rogueInfoData);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeString(FieldNames.signature, signature);
      }
      output.endObject();
    }

    @Override
    public PlayerLoginCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1268567436:
          case -201491879: {
            if (input.isAtField(FieldNames.loginRandom)) {
              if (!input.trySkipNullValue()) {
                loginRandom = input.readUInt64();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2005674429:
          case -349907515: {
            if (input.isAtField(FieldNames.clientResVersion)) {
              if (!input.trySkipNullValue()) {
                clientResVersion = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 155581005:
          case 538062726: {
            if (input.isAtField(FieldNames.platformType)) {
              if (!input.trySkipNullValue()) {
                final PlatformTypeOuterClass.PlatformType value = input.readEnum(PlatformTypeOuterClass.PlatformType.converter());
                if (value != null) {
                  platformType = value.getNumber();
                  bitField0_ |= 0x00000004;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1613589672: {
            if (input.isAtField(FieldNames.language)) {
              if (!input.trySkipNullValue()) {
                final LanguageTypeOuterClass.LanguageType value = input.readEnum(LanguageTypeOuterClass.LanguageType.converter());
                if (value != null) {
                  language = value.getNumber();
                  bitField0_ |= 0x00000008;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1486739086:
          case 480604278: {
            if (input.isAtField(FieldNames.rogueInfoData)) {
              if (!input.trySkipNullValue()) {
                input.readString(rogueInfoData);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1073584312: {
            if (input.isAtField(FieldNames.signature)) {
              if (!input.trySkipNullValue()) {
                input.readString(signature);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerLoginCsReq clone() {
      return new PlayerLoginCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerLoginCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerLoginCsReq(), data).checkInitialized();
    }

    public static PlayerLoginCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerLoginCsReq(), input).checkInitialized();
    }

    public static PlayerLoginCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerLoginCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerLoginCsReq messages
     */
    public static MessageFactory<PlayerLoginCsReq> getFactory() {
      return PlayerLoginCsReqFactory.INSTANCE;
    }

    private enum PlayerLoginCsReqFactory implements MessageFactory<PlayerLoginCsReq> {
      INSTANCE;

      @Override
      public PlayerLoginCsReq create() {
        return PlayerLoginCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName loginRandom = FieldName.forField("loginRandom", "login_random");

      static final FieldName clientResVersion = FieldName.forField("clientResVersion", "client_res_version");

      static final FieldName platformType = FieldName.forField("platformType", "platform_type");

      static final FieldName language = FieldName.forField("language");

      static final FieldName rogueInfoData = FieldName.forField("rogueInfoData", "rogue_info_data");

      static final FieldName signature = FieldName.forField("signature");
    }
  }
}
