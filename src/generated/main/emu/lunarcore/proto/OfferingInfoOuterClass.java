// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;

public final class OfferingInfoOuterClass {
  /**
   * Protobuf type {@code OfferingInfo}
   */
  public static final class OfferingInfo extends ProtoMessage<OfferingInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 HNGNMJJIFJG = 1;</code>
     */
    private int hNGNMJJIFJG;

    /**
     * <code>optional uint32 CDNKHDBNEPB = 4;</code>
     */
    private int cDNKHDBNEPB;

    /**
     * <code>optional uint32 OPICFPGHDFK = 7;</code>
     */
    private int oPICFPGHDFK;

    /**
     * <code>optional uint32 HELPOKAPMHC = 10;</code>
     */
    private int hELPOKAPMHC;

    /**
     * <code>optional .OfferingState ABKHLKEMKID = 15;</code>
     */
    private int aBKHLKEMKID;

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     */
    private final RepeatedInt pHOFEGMLJDE = RepeatedInt.newEmptyInstance();

    private OfferingInfo() {
    }

    /**
     * @return a new empty instance of {@code OfferingInfo}
     */
    public static OfferingInfo newInstance() {
      return new OfferingInfo();
    }

    /**
     * <code>optional uint32 HNGNMJJIFJG = 1;</code>
     * @return whether the hNGNMJJIFJG field is set
     */
    public boolean hasHNGNMJJIFJG() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 HNGNMJJIFJG = 1;</code>
     * @return this
     */
    public OfferingInfo clearHNGNMJJIFJG() {
      bitField0_ &= ~0x00000001;
      hNGNMJJIFJG = 0;
      return this;
    }

    /**
     * <code>optional uint32 HNGNMJJIFJG = 1;</code>
     * @return the hNGNMJJIFJG
     */
    public int getHNGNMJJIFJG() {
      return hNGNMJJIFJG;
    }

    /**
     * <code>optional uint32 HNGNMJJIFJG = 1;</code>
     * @param value the hNGNMJJIFJG to set
     * @return this
     */
    public OfferingInfo setHNGNMJJIFJG(final int value) {
      bitField0_ |= 0x00000001;
      hNGNMJJIFJG = value;
      return this;
    }

    /**
     * <code>optional uint32 CDNKHDBNEPB = 4;</code>
     * @return whether the cDNKHDBNEPB field is set
     */
    public boolean hasCDNKHDBNEPB() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 CDNKHDBNEPB = 4;</code>
     * @return this
     */
    public OfferingInfo clearCDNKHDBNEPB() {
      bitField0_ &= ~0x00000002;
      cDNKHDBNEPB = 0;
      return this;
    }

    /**
     * <code>optional uint32 CDNKHDBNEPB = 4;</code>
     * @return the cDNKHDBNEPB
     */
    public int getCDNKHDBNEPB() {
      return cDNKHDBNEPB;
    }

    /**
     * <code>optional uint32 CDNKHDBNEPB = 4;</code>
     * @param value the cDNKHDBNEPB to set
     * @return this
     */
    public OfferingInfo setCDNKHDBNEPB(final int value) {
      bitField0_ |= 0x00000002;
      cDNKHDBNEPB = value;
      return this;
    }

    /**
     * <code>optional uint32 OPICFPGHDFK = 7;</code>
     * @return whether the oPICFPGHDFK field is set
     */
    public boolean hasOPICFPGHDFK() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 OPICFPGHDFK = 7;</code>
     * @return this
     */
    public OfferingInfo clearOPICFPGHDFK() {
      bitField0_ &= ~0x00000004;
      oPICFPGHDFK = 0;
      return this;
    }

    /**
     * <code>optional uint32 OPICFPGHDFK = 7;</code>
     * @return the oPICFPGHDFK
     */
    public int getOPICFPGHDFK() {
      return oPICFPGHDFK;
    }

    /**
     * <code>optional uint32 OPICFPGHDFK = 7;</code>
     * @param value the oPICFPGHDFK to set
     * @return this
     */
    public OfferingInfo setOPICFPGHDFK(final int value) {
      bitField0_ |= 0x00000004;
      oPICFPGHDFK = value;
      return this;
    }

    /**
     * <code>optional uint32 HELPOKAPMHC = 10;</code>
     * @return whether the hELPOKAPMHC field is set
     */
    public boolean hasHELPOKAPMHC() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 HELPOKAPMHC = 10;</code>
     * @return this
     */
    public OfferingInfo clearHELPOKAPMHC() {
      bitField0_ &= ~0x00000008;
      hELPOKAPMHC = 0;
      return this;
    }

    /**
     * <code>optional uint32 HELPOKAPMHC = 10;</code>
     * @return the hELPOKAPMHC
     */
    public int getHELPOKAPMHC() {
      return hELPOKAPMHC;
    }

    /**
     * <code>optional uint32 HELPOKAPMHC = 10;</code>
     * @param value the hELPOKAPMHC to set
     * @return this
     */
    public OfferingInfo setHELPOKAPMHC(final int value) {
      bitField0_ |= 0x00000008;
      hELPOKAPMHC = value;
      return this;
    }

    /**
     * <code>optional .OfferingState ABKHLKEMKID = 15;</code>
     * @return whether the aBKHLKEMKID field is set
     */
    public boolean hasABKHLKEMKID() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional .OfferingState ABKHLKEMKID = 15;</code>
     * @return this
     */
    public OfferingInfo clearABKHLKEMKID() {
      bitField0_ &= ~0x00000010;
      aBKHLKEMKID = 0;
      return this;
    }

    /**
     * <code>optional .OfferingState ABKHLKEMKID = 15;</code>
     * @return the aBKHLKEMKID
     */
    public OfferingStateOuterClass.OfferingState getABKHLKEMKID() {
      return OfferingStateOuterClass.OfferingState.forNumber(aBKHLKEMKID);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link OfferingInfo#getABKHLKEMKID()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getABKHLKEMKIDValue() {
      return aBKHLKEMKID;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link OfferingStateOuterClass.OfferingState}. Setting an invalid value
     * can cause {@link OfferingInfo#getABKHLKEMKID()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public OfferingInfo setABKHLKEMKIDValue(final int value) {
      bitField0_ |= 0x00000010;
      aBKHLKEMKID = value;
      return this;
    }

    /**
     * <code>optional .OfferingState ABKHLKEMKID = 15;</code>
     * @param value the aBKHLKEMKID to set
     * @return this
     */
    public OfferingInfo setABKHLKEMKID(final OfferingStateOuterClass.OfferingState value) {
      bitField0_ |= 0x00000010;
      aBKHLKEMKID = value.getNumber();
      return this;
    }

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     * @return whether the pHOFEGMLJDE field is set
     */
    public boolean hasPHOFEGMLJDE() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     * @return this
     */
    public OfferingInfo clearPHOFEGMLJDE() {
      bitField0_ &= ~0x00000020;
      pHOFEGMLJDE.clear();
      return this;
    }

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutablePHOFEGMLJDE()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getPHOFEGMLJDE() {
      return pHOFEGMLJDE;
    }

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutablePHOFEGMLJDE() {
      bitField0_ |= 0x00000020;
      return pHOFEGMLJDE;
    }

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     * @param value the pHOFEGMLJDE to add
     * @return this
     */
    public OfferingInfo addPHOFEGMLJDE(final int value) {
      bitField0_ |= 0x00000020;
      pHOFEGMLJDE.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 PHOFEGMLJDE = 11;</code>
     * @param values the pHOFEGMLJDE to add
     * @return this
     */
    public OfferingInfo addAllPHOFEGMLJDE(final int... values) {
      bitField0_ |= 0x00000020;
      pHOFEGMLJDE.addAll(values);
      return this;
    }

    @Override
    public OfferingInfo copyFrom(final OfferingInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        hNGNMJJIFJG = other.hNGNMJJIFJG;
        cDNKHDBNEPB = other.cDNKHDBNEPB;
        oPICFPGHDFK = other.oPICFPGHDFK;
        hELPOKAPMHC = other.hELPOKAPMHC;
        aBKHLKEMKID = other.aBKHLKEMKID;
        pHOFEGMLJDE.copyFrom(other.pHOFEGMLJDE);
      }
      return this;
    }

    @Override
    public OfferingInfo mergeFrom(final OfferingInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasHNGNMJJIFJG()) {
        setHNGNMJJIFJG(other.hNGNMJJIFJG);
      }
      if (other.hasCDNKHDBNEPB()) {
        setCDNKHDBNEPB(other.cDNKHDBNEPB);
      }
      if (other.hasOPICFPGHDFK()) {
        setOPICFPGHDFK(other.oPICFPGHDFK);
      }
      if (other.hasHELPOKAPMHC()) {
        setHELPOKAPMHC(other.hELPOKAPMHC);
      }
      if (other.hasABKHLKEMKID()) {
        setABKHLKEMKIDValue(other.aBKHLKEMKID);
      }
      if (other.hasPHOFEGMLJDE()) {
        getMutablePHOFEGMLJDE().addAll(other.pHOFEGMLJDE);
      }
      return this;
    }

    @Override
    public OfferingInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      hNGNMJJIFJG = 0;
      cDNKHDBNEPB = 0;
      oPICFPGHDFK = 0;
      hELPOKAPMHC = 0;
      aBKHLKEMKID = 0;
      pHOFEGMLJDE.clear();
      return this;
    }

    @Override
    public OfferingInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      pHOFEGMLJDE.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof OfferingInfo)) {
        return false;
      }
      OfferingInfo other = (OfferingInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasHNGNMJJIFJG() || hNGNMJJIFJG == other.hNGNMJJIFJG)
        && (!hasCDNKHDBNEPB() || cDNKHDBNEPB == other.cDNKHDBNEPB)
        && (!hasOPICFPGHDFK() || oPICFPGHDFK == other.oPICFPGHDFK)
        && (!hasHELPOKAPMHC() || hELPOKAPMHC == other.hELPOKAPMHC)
        && (!hasABKHLKEMKID() || aBKHLKEMKID == other.aBKHLKEMKID)
        && (!hasPHOFEGMLJDE() || pHOFEGMLJDE.equals(other.pHOFEGMLJDE));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(hNGNMJJIFJG);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(cDNKHDBNEPB);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt32NoTag(oPICFPGHDFK);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(hELPOKAPMHC);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 120);
        output.writeEnumNoTag(aBKHLKEMKID);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        for (int i = 0; i < pHOFEGMLJDE.length(); i++) {
          output.writeRawByte((byte) 88);
          output.writeUInt32NoTag(pHOFEGMLJDE.array()[i]);
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hNGNMJJIFJG);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(cDNKHDBNEPB);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(oPICFPGHDFK);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hELPOKAPMHC);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(aBKHLKEMKID);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += (1 * pHOFEGMLJDE.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(pHOFEGMLJDE);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public OfferingInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // hNGNMJJIFJG
            hNGNMJJIFJG = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // cDNKHDBNEPB
            cDNKHDBNEPB = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // oPICFPGHDFK
            oPICFPGHDFK = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // hELPOKAPMHC
            hELPOKAPMHC = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // aBKHLKEMKID
            final int value = input.readInt32();
            if (OfferingStateOuterClass.OfferingState.forNumber(value) != null) {
              aBKHLKEMKID = value;
              bitField0_ |= 0x00000010;
            }
            tag = input.readTag();
            if (tag != 90) {
              break;
            }
          }
          case 90: {
            // pHOFEGMLJDE [packed=true]
            input.readPackedUInt32(pHOFEGMLJDE, tag);
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 88: {
            // pHOFEGMLJDE [packed=false]
            tag = input.readRepeatedUInt32(pHOFEGMLJDE, tag);
            bitField0_ |= 0x00000020;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.hNGNMJJIFJG, hNGNMJJIFJG);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.cDNKHDBNEPB, cDNKHDBNEPB);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.oPICFPGHDFK, oPICFPGHDFK);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.hELPOKAPMHC, hELPOKAPMHC);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeEnum(FieldNames.aBKHLKEMKID, aBKHLKEMKID, OfferingStateOuterClass.OfferingState.converter());
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRepeatedUInt32(FieldNames.pHOFEGMLJDE, pHOFEGMLJDE);
      }
      output.endObject();
    }

    @Override
    public OfferingInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -2147176998: {
            if (input.isAtField(FieldNames.hNGNMJJIFJG)) {
              if (!input.trySkipNullValue()) {
                hNGNMJJIFJG = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -809528815: {
            if (input.isAtField(FieldNames.cDNKHDBNEPB)) {
              if (!input.trySkipNullValue()) {
                cDNKHDBNEPB = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -998566429: {
            if (input.isAtField(FieldNames.oPICFPGHDFK)) {
              if (!input.trySkipNullValue()) {
                oPICFPGHDFK = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 160300220: {
            if (input.isAtField(FieldNames.hELPOKAPMHC)) {
              if (!input.trySkipNullValue()) {
                hELPOKAPMHC = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1465436191: {
            if (input.isAtField(FieldNames.aBKHLKEMKID)) {
              if (!input.trySkipNullValue()) {
                final OfferingStateOuterClass.OfferingState value = input.readEnum(OfferingStateOuterClass.OfferingState.converter());
                if (value != null) {
                  aBKHLKEMKID = value.getNumber();
                  bitField0_ |= 0x00000010;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 610729019: {
            if (input.isAtField(FieldNames.pHOFEGMLJDE)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(pHOFEGMLJDE);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public OfferingInfo clone() {
      return new OfferingInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static OfferingInfo parseFrom(final byte[] data) throws InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new OfferingInfo(), data).checkInitialized();
    }

    public static OfferingInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new OfferingInfo(), input).checkInitialized();
    }

    public static OfferingInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new OfferingInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating OfferingInfo messages
     */
    public static MessageFactory<OfferingInfo> getFactory() {
      return OfferingInfoFactory.INSTANCE;
    }

    private enum OfferingInfoFactory implements MessageFactory<OfferingInfo> {
      INSTANCE;

      @Override
      public OfferingInfo create() {
        return OfferingInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName hNGNMJJIFJG = FieldName.forField("HNGNMJJIFJG");

      static final FieldName cDNKHDBNEPB = FieldName.forField("CDNKHDBNEPB");

      static final FieldName oPICFPGHDFK = FieldName.forField("OPICFPGHDFK");

      static final FieldName hELPOKAPMHC = FieldName.forField("HELPOKAPMHC");

      static final FieldName aBKHLKEMKID = FieldName.forField("ABKHLKEMKID");

      static final FieldName pHOFEGMLJDE = FieldName.forField("PHOFEGMLJDE");
    }
  }
}
