// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class WorkbenchReforgeHexAvatarTargetInfoOuterClass {
  /**
   * Protobuf type {@code WorkbenchReforgeHexAvatarTargetInfo}
   */
  public static final class WorkbenchReforgeHexAvatarTargetInfo extends ProtoMessage<WorkbenchReforgeHexAvatarTargetInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 target_reforge_hex_id = 10;</code>
     */
    private int targetReforgeHexId;

    private WorkbenchReforgeHexAvatarTargetInfo() {
    }

    /**
     * @return a new empty instance of {@code WorkbenchReforgeHexAvatarTargetInfo}
     */
    public static WorkbenchReforgeHexAvatarTargetInfo newInstance() {
      return new WorkbenchReforgeHexAvatarTargetInfo();
    }

    /**
     * <code>optional uint32 target_reforge_hex_id = 10;</code>
     * @return whether the targetReforgeHexId field is set
     */
    public boolean hasTargetReforgeHexId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 target_reforge_hex_id = 10;</code>
     * @return this
     */
    public WorkbenchReforgeHexAvatarTargetInfo clearTargetReforgeHexId() {
      bitField0_ &= ~0x00000001;
      targetReforgeHexId = 0;
      return this;
    }

    /**
     * <code>optional uint32 target_reforge_hex_id = 10;</code>
     * @return the targetReforgeHexId
     */
    public int getTargetReforgeHexId() {
      return targetReforgeHexId;
    }

    /**
     * <code>optional uint32 target_reforge_hex_id = 10;</code>
     * @param value the targetReforgeHexId to set
     * @return this
     */
    public WorkbenchReforgeHexAvatarTargetInfo setTargetReforgeHexId(final int value) {
      bitField0_ |= 0x00000001;
      targetReforgeHexId = value;
      return this;
    }

    @Override
    public WorkbenchReforgeHexAvatarTargetInfo copyFrom(
        final WorkbenchReforgeHexAvatarTargetInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        targetReforgeHexId = other.targetReforgeHexId;
      }
      return this;
    }

    @Override
    public WorkbenchReforgeHexAvatarTargetInfo mergeFrom(
        final WorkbenchReforgeHexAvatarTargetInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasTargetReforgeHexId()) {
        setTargetReforgeHexId(other.targetReforgeHexId);
      }
      return this;
    }

    @Override
    public WorkbenchReforgeHexAvatarTargetInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      targetReforgeHexId = 0;
      return this;
    }

    @Override
    public WorkbenchReforgeHexAvatarTargetInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WorkbenchReforgeHexAvatarTargetInfo)) {
        return false;
      }
      WorkbenchReforgeHexAvatarTargetInfo other = (WorkbenchReforgeHexAvatarTargetInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasTargetReforgeHexId() || targetReforgeHexId == other.targetReforgeHexId);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(targetReforgeHexId);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(targetReforgeHexId);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WorkbenchReforgeHexAvatarTargetInfo mergeFrom(final ProtoSource input) throws
        IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 80: {
            // targetReforgeHexId
            targetReforgeHexId = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.targetReforgeHexId, targetReforgeHexId);
      }
      output.endObject();
    }

    @Override
    public WorkbenchReforgeHexAvatarTargetInfo mergeFrom(final JsonSource input) throws
        IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 2081156371:
          case -1696184648: {
            if (input.isAtField(FieldNames.targetReforgeHexId)) {
              if (!input.trySkipNullValue()) {
                targetReforgeHexId = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WorkbenchReforgeHexAvatarTargetInfo clone() {
      return new WorkbenchReforgeHexAvatarTargetInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WorkbenchReforgeHexAvatarTargetInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WorkbenchReforgeHexAvatarTargetInfo(), data).checkInitialized();
    }

    public static WorkbenchReforgeHexAvatarTargetInfo parseFrom(final ProtoSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new WorkbenchReforgeHexAvatarTargetInfo(), input).checkInitialized();
    }

    public static WorkbenchReforgeHexAvatarTargetInfo parseFrom(final JsonSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new WorkbenchReforgeHexAvatarTargetInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating WorkbenchReforgeHexAvatarTargetInfo messages
     */
    public static MessageFactory<WorkbenchReforgeHexAvatarTargetInfo> getFactory() {
      return WorkbenchReforgeHexAvatarTargetInfoFactory.INSTANCE;
    }

    private enum WorkbenchReforgeHexAvatarTargetInfoFactory implements MessageFactory<WorkbenchReforgeHexAvatarTargetInfo> {
      INSTANCE;

      @Override
      public WorkbenchReforgeHexAvatarTargetInfo create() {
        return WorkbenchReforgeHexAvatarTargetInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName targetReforgeHexId = FieldName.forField("targetReforgeHexId", "target_reforge_hex_id");
    }
  }
}
