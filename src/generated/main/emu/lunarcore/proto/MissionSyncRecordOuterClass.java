// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class MissionSyncRecordOuterClass {
  /**
   * Protobuf enum {@code MissionSyncRecord}
   */
  public enum MissionSyncRecord implements ProtoEnum<MissionSyncRecord> {
    /**
     * <code>MISSION_SYNC_RECORD_NONE = 0;</code>
     */
    MISSION_SYNC_RECORD_NONE("MISSION_SYNC_RECORD_NONE", 0),

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT = 1;</code>
     */
    MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT("MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT", 1),

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_START = 2;</code>
     */
    MISSION_SYNC_RECORD_MAIN_MISSION_START("MISSION_SYNC_RECORD_MAIN_MISSION_START", 2),

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_FINISH = 3;</code>
     */
    MISSION_SYNC_RECORD_MAIN_MISSION_FINISH("MISSION_SYNC_RECORD_MAIN_MISSION_FINISH", 3),

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_DELETE = 4;</code>
     */
    MISSION_SYNC_RECORD_MAIN_MISSION_DELETE("MISSION_SYNC_RECORD_MAIN_MISSION_DELETE", 4),

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_ACCEPT = 11;</code>
     */
    MISSION_SYNC_RECORD_MISSION_ACCEPT("MISSION_SYNC_RECORD_MISSION_ACCEPT", 11),

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_START = 12;</code>
     */
    MISSION_SYNC_RECORD_MISSION_START("MISSION_SYNC_RECORD_MISSION_START", 12),

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_FINISH = 13;</code>
     */
    MISSION_SYNC_RECORD_MISSION_FINISH("MISSION_SYNC_RECORD_MISSION_FINISH", 13),

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_DELETE = 14;</code>
     */
    MISSION_SYNC_RECORD_MISSION_DELETE("MISSION_SYNC_RECORD_MISSION_DELETE", 14),

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_PROGRESS = 15;</code>
     */
    MISSION_SYNC_RECORD_MISSION_PROGRESS("MISSION_SYNC_RECORD_MISSION_PROGRESS", 15);

    /**
     * <code>MISSION_SYNC_RECORD_NONE = 0;</code>
     */
    public static final int MISSION_SYNC_RECORD_NONE_VALUE = 0;

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT = 1;</code>
     */
    public static final int MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT_VALUE = 1;

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_START = 2;</code>
     */
    public static final int MISSION_SYNC_RECORD_MAIN_MISSION_START_VALUE = 2;

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_FINISH = 3;</code>
     */
    public static final int MISSION_SYNC_RECORD_MAIN_MISSION_FINISH_VALUE = 3;

    /**
     * <code>MISSION_SYNC_RECORD_MAIN_MISSION_DELETE = 4;</code>
     */
    public static final int MISSION_SYNC_RECORD_MAIN_MISSION_DELETE_VALUE = 4;

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_ACCEPT = 11;</code>
     */
    public static final int MISSION_SYNC_RECORD_MISSION_ACCEPT_VALUE = 11;

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_START = 12;</code>
     */
    public static final int MISSION_SYNC_RECORD_MISSION_START_VALUE = 12;

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_FINISH = 13;</code>
     */
    public static final int MISSION_SYNC_RECORD_MISSION_FINISH_VALUE = 13;

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_DELETE = 14;</code>
     */
    public static final int MISSION_SYNC_RECORD_MISSION_DELETE_VALUE = 14;

    /**
     * <code>MISSION_SYNC_RECORD_MISSION_PROGRESS = 15;</code>
     */
    public static final int MISSION_SYNC_RECORD_MISSION_PROGRESS_VALUE = 15;

    private final String name;

    private final int number;

    private MissionSyncRecord(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<MissionSyncRecord> converter() {
      return MissionSyncRecordConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static MissionSyncRecord forNumber(int value) {
      return MissionSyncRecordConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static MissionSyncRecord forNumberOr(int number, MissionSyncRecord other) {
      MissionSyncRecord value = forNumber(number);
      return value == null ? other : value;
    }

    enum MissionSyncRecordConverter implements ProtoEnum.EnumConverter<MissionSyncRecord> {
      INSTANCE;

      private static final MissionSyncRecord[] lookup = new MissionSyncRecord[16];

      static {
        lookup[0] = MISSION_SYNC_RECORD_NONE;
        lookup[1] = MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT;
        lookup[2] = MISSION_SYNC_RECORD_MAIN_MISSION_START;
        lookup[3] = MISSION_SYNC_RECORD_MAIN_MISSION_FINISH;
        lookup[4] = MISSION_SYNC_RECORD_MAIN_MISSION_DELETE;
        lookup[11] = MISSION_SYNC_RECORD_MISSION_ACCEPT;
        lookup[12] = MISSION_SYNC_RECORD_MISSION_START;
        lookup[13] = MISSION_SYNC_RECORD_MISSION_FINISH;
        lookup[14] = MISSION_SYNC_RECORD_MISSION_DELETE;
        lookup[15] = MISSION_SYNC_RECORD_MISSION_PROGRESS;
      }

      @Override
      public final MissionSyncRecord forNumber(final int value) {
        if (value >= 0 && value < lookup.length) {
          return lookup[value];
        }
        return null;
      }

      @Override
      public final MissionSyncRecord forName(final CharSequence value) {
        switch (value.length()) {
          case 24: {
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_NONE", value)) {
              return MISSION_SYNC_RECORD_NONE;
            }
            break;
          }
          case 33: {
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MISSION_START", value)) {
              return MISSION_SYNC_RECORD_MISSION_START;
            }
            break;
          }
          case 34: {
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MISSION_ACCEPT", value)) {
              return MISSION_SYNC_RECORD_MISSION_ACCEPT;
            }
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MISSION_FINISH", value)) {
              return MISSION_SYNC_RECORD_MISSION_FINISH;
            }
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MISSION_DELETE", value)) {
              return MISSION_SYNC_RECORD_MISSION_DELETE;
            }
            break;
          }
          case 36: {
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MISSION_PROGRESS", value)) {
              return MISSION_SYNC_RECORD_MISSION_PROGRESS;
            }
            break;
          }
          case 38: {
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MAIN_MISSION_START", value)) {
              return MISSION_SYNC_RECORD_MAIN_MISSION_START;
            }
            break;
          }
          case 39: {
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT", value)) {
              return MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT;
            }
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MAIN_MISSION_FINISH", value)) {
              return MISSION_SYNC_RECORD_MAIN_MISSION_FINISH;
            }
            if (ProtoUtil.isEqual("MISSION_SYNC_RECORD_MAIN_MISSION_DELETE", value)) {
              return MISSION_SYNC_RECORD_MAIN_MISSION_DELETE;
            }
            break;
          }
        }
        return null;
      }
    }
  }
}
