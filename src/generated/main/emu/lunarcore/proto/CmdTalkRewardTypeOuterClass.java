// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class CmdTalkRewardTypeOuterClass {
  /**
   * Protobuf enum {@code CmdTalkRewardType}
   */
  public enum CmdTalkRewardType implements ProtoEnum<CmdTalkRewardType> {
    /**
     * <code>CmdTalkRewardTypeNone = 0;</code>
     */
    CmdTalkRewardTypeNone("CmdTalkRewardTypeNone", 0),

    /**
     * <code>CmdGetNpcTakenRewardCsReq = 2101;</code>
     */
    CmdGetNpcTakenRewardCsReq("CmdGetNpcTakenRewardCsReq", 2101),

    /**
     * <code>CmdGetNpcTakenRewardScRsp = 2168;</code>
     */
    CmdGetNpcTakenRewardScRsp("CmdGetNpcTakenRewardScRsp", 2168),

    /**
     * <code>CmdGetFirstTalkNpcCsReq = 2130;</code>
     */
    CmdGetFirstTalkNpcCsReq("CmdGetFirstTalkNpcCsReq", 2130),

    /**
     * <code>CmdGetFirstTalkByPerformanceNpcScRsp = 2114;</code>
     */
    CmdGetFirstTalkByPerformanceNpcScRsp("CmdGetFirstTalkByPerformanceNpcScRsp", 2114),

    /**
     * <code>CmdFinishFirstTalkByPerformanceNpcScRsp = 2122;</code>
     */
    CmdFinishFirstTalkByPerformanceNpcScRsp("CmdFinishFirstTalkByPerformanceNpcScRsp", 2122),

    /**
     * <code>CmdGetFirstTalkNpcScRsp = 2156;</code>
     */
    CmdGetFirstTalkNpcScRsp("CmdGetFirstTalkNpcScRsp", 2156),

    /**
     * <code>CmdFinishFirstTalkByPerformanceNpcCsReq = 2149;</code>
     */
    CmdFinishFirstTalkByPerformanceNpcCsReq("CmdFinishFirstTalkByPerformanceNpcCsReq", 2149),

    /**
     * <code>CmdFinishFirstTalkNpcScRsp = 2176;</code>
     */
    CmdFinishFirstTalkNpcScRsp("CmdFinishFirstTalkNpcScRsp", 2176),

    /**
     * <code>CmdTakeTalkRewardScRsp = 2124;</code>
     */
    CmdTakeTalkRewardScRsp("CmdTakeTalkRewardScRsp", 2124),

    /**
     * <code>CmdSelectInclinationTextCsReq = 2128;</code>
     */
    CmdSelectInclinationTextCsReq("CmdSelectInclinationTextCsReq", 2128),

    /**
     * <code>CmdSelectInclinationTextScRsp = 2111;</code>
     */
    CmdSelectInclinationTextScRsp("CmdSelectInclinationTextScRsp", 2111),

    /**
     * <code>CmdGetFirstTalkByPerformanceNpcCsReq = 2105;</code>
     */
    CmdGetFirstTalkByPerformanceNpcCsReq("CmdGetFirstTalkByPerformanceNpcCsReq", 2105),

    /**
     * <code>CmdTakeTalkRewardCsReq = 2158;</code>
     */
    CmdTakeTalkRewardCsReq("CmdTakeTalkRewardCsReq", 2158),

    /**
     * <code>CmdFinishFirstTalkNpcCsReq = 2197;</code>
     */
    CmdFinishFirstTalkNpcCsReq("CmdFinishFirstTalkNpcCsReq", 2197);

    /**
     * <code>CmdTalkRewardTypeNone = 0;</code>
     */
    public static final int CmdTalkRewardTypeNone_VALUE = 0;

    /**
     * <code>CmdGetNpcTakenRewardCsReq = 2101;</code>
     */
    public static final int CmdGetNpcTakenRewardCsReq_VALUE = 2101;

    /**
     * <code>CmdGetNpcTakenRewardScRsp = 2168;</code>
     */
    public static final int CmdGetNpcTakenRewardScRsp_VALUE = 2168;

    /**
     * <code>CmdGetFirstTalkNpcCsReq = 2130;</code>
     */
    public static final int CmdGetFirstTalkNpcCsReq_VALUE = 2130;

    /**
     * <code>CmdGetFirstTalkByPerformanceNpcScRsp = 2114;</code>
     */
    public static final int CmdGetFirstTalkByPerformanceNpcScRsp_VALUE = 2114;

    /**
     * <code>CmdFinishFirstTalkByPerformanceNpcScRsp = 2122;</code>
     */
    public static final int CmdFinishFirstTalkByPerformanceNpcScRsp_VALUE = 2122;

    /**
     * <code>CmdGetFirstTalkNpcScRsp = 2156;</code>
     */
    public static final int CmdGetFirstTalkNpcScRsp_VALUE = 2156;

    /**
     * <code>CmdFinishFirstTalkByPerformanceNpcCsReq = 2149;</code>
     */
    public static final int CmdFinishFirstTalkByPerformanceNpcCsReq_VALUE = 2149;

    /**
     * <code>CmdFinishFirstTalkNpcScRsp = 2176;</code>
     */
    public static final int CmdFinishFirstTalkNpcScRsp_VALUE = 2176;

    /**
     * <code>CmdTakeTalkRewardScRsp = 2124;</code>
     */
    public static final int CmdTakeTalkRewardScRsp_VALUE = 2124;

    /**
     * <code>CmdSelectInclinationTextCsReq = 2128;</code>
     */
    public static final int CmdSelectInclinationTextCsReq_VALUE = 2128;

    /**
     * <code>CmdSelectInclinationTextScRsp = 2111;</code>
     */
    public static final int CmdSelectInclinationTextScRsp_VALUE = 2111;

    /**
     * <code>CmdGetFirstTalkByPerformanceNpcCsReq = 2105;</code>
     */
    public static final int CmdGetFirstTalkByPerformanceNpcCsReq_VALUE = 2105;

    /**
     * <code>CmdTakeTalkRewardCsReq = 2158;</code>
     */
    public static final int CmdTakeTalkRewardCsReq_VALUE = 2158;

    /**
     * <code>CmdFinishFirstTalkNpcCsReq = 2197;</code>
     */
    public static final int CmdFinishFirstTalkNpcCsReq_VALUE = 2197;

    private final String name;

    private final int number;

    private CmdTalkRewardType(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<CmdTalkRewardType> converter() {
      return CmdTalkRewardTypeConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static CmdTalkRewardType forNumber(int value) {
      return CmdTalkRewardTypeConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static CmdTalkRewardType forNumberOr(int number, CmdTalkRewardType other) {
      CmdTalkRewardType value = forNumber(number);
      return value == null ? other : value;
    }

    enum CmdTalkRewardTypeConverter implements ProtoEnum.EnumConverter<CmdTalkRewardType> {
      INSTANCE;

      @Override
      public final CmdTalkRewardType forNumber(final int value) {
        switch(value) {
          case 0: return CmdTalkRewardTypeNone;
          case 2101: return CmdGetNpcTakenRewardCsReq;
          case 2168: return CmdGetNpcTakenRewardScRsp;
          case 2130: return CmdGetFirstTalkNpcCsReq;
          case 2114: return CmdGetFirstTalkByPerformanceNpcScRsp;
          case 2122: return CmdFinishFirstTalkByPerformanceNpcScRsp;
          case 2156: return CmdGetFirstTalkNpcScRsp;
          case 2149: return CmdFinishFirstTalkByPerformanceNpcCsReq;
          case 2176: return CmdFinishFirstTalkNpcScRsp;
          case 2124: return CmdTakeTalkRewardScRsp;
          case 2128: return CmdSelectInclinationTextCsReq;
          case 2111: return CmdSelectInclinationTextScRsp;
          case 2105: return CmdGetFirstTalkByPerformanceNpcCsReq;
          case 2158: return CmdTakeTalkRewardCsReq;
          case 2197: return CmdFinishFirstTalkNpcCsReq;
          default: return null;
        }
      }

      @Override
      public final CmdTalkRewardType forName(final CharSequence value) {
        switch (value.length()) {
          case 21: {
            if (ProtoUtil.isEqual("CmdTalkRewardTypeNone", value)) {
              return CmdTalkRewardTypeNone;
            }
            break;
          }
          case 22: {
            if (ProtoUtil.isEqual("CmdTakeTalkRewardScRsp", value)) {
              return CmdTakeTalkRewardScRsp;
            }
            if (ProtoUtil.isEqual("CmdTakeTalkRewardCsReq", value)) {
              return CmdTakeTalkRewardCsReq;
            }
            break;
          }
          case 23: {
            if (ProtoUtil.isEqual("CmdGetFirstTalkNpcCsReq", value)) {
              return CmdGetFirstTalkNpcCsReq;
            }
            if (ProtoUtil.isEqual("CmdGetFirstTalkNpcScRsp", value)) {
              return CmdGetFirstTalkNpcScRsp;
            }
            break;
          }
          case 25: {
            if (ProtoUtil.isEqual("CmdGetNpcTakenRewardCsReq", value)) {
              return CmdGetNpcTakenRewardCsReq;
            }
            if (ProtoUtil.isEqual("CmdGetNpcTakenRewardScRsp", value)) {
              return CmdGetNpcTakenRewardScRsp;
            }
            break;
          }
          case 26: {
            if (ProtoUtil.isEqual("CmdFinishFirstTalkNpcScRsp", value)) {
              return CmdFinishFirstTalkNpcScRsp;
            }
            if (ProtoUtil.isEqual("CmdFinishFirstTalkNpcCsReq", value)) {
              return CmdFinishFirstTalkNpcCsReq;
            }
            break;
          }
          case 29: {
            if (ProtoUtil.isEqual("CmdSelectInclinationTextCsReq", value)) {
              return CmdSelectInclinationTextCsReq;
            }
            if (ProtoUtil.isEqual("CmdSelectInclinationTextScRsp", value)) {
              return CmdSelectInclinationTextScRsp;
            }
            break;
          }
          case 36: {
            if (ProtoUtil.isEqual("CmdGetFirstTalkByPerformanceNpcScRsp", value)) {
              return CmdGetFirstTalkByPerformanceNpcScRsp;
            }
            if (ProtoUtil.isEqual("CmdGetFirstTalkByPerformanceNpcCsReq", value)) {
              return CmdGetFirstTalkByPerformanceNpcCsReq;
            }
            break;
          }
          case 39: {
            if (ProtoUtil.isEqual("CmdFinishFirstTalkByPerformanceNpcScRsp", value)) {
              return CmdFinishFirstTalkByPerformanceNpcScRsp;
            }
            if (ProtoUtil.isEqual("CmdFinishFirstTalkByPerformanceNpcCsReq", value)) {
              return CmdFinishFirstTalkByPerformanceNpcCsReq;
            }
            break;
          }
        }
        return null;
      }
    }
  }
}
