// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class MonsterBattleTypeOuterClass {
  /**
   * Protobuf enum {@code MonsterBattleType}
   */
  public enum MonsterBattleType implements ProtoEnum<MonsterBattleType> {
    /**
     * <code>MONSTER_BATTLE_TYPE_NONE = 0;</code>
     */
    MONSTER_BATTLE_TYPE_NONE("MONSTER_BATTLE_TYPE_NONE", 0),

    /**
     * <code>MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;</code>
     */
    MONSTER_BATTLE_TYPE_TRIGGER_BATTLE("MONSTER_BATTLE_TYPE_TRIGGER_BATTLE", 1),

    /**
     * <code>MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;</code>
     */
    MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE("MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE", 2),

    /**
     * <code>MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;</code>
     */
    MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE("MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE", 3),

    /**
     * <code>MONSTER_BATTLE_TYPE_NO_BATTLE = 4;</code>
     */
    MONSTER_BATTLE_TYPE_NO_BATTLE("MONSTER_BATTLE_TYPE_NO_BATTLE", 4);

    /**
     * <code>MONSTER_BATTLE_TYPE_NONE = 0;</code>
     */
    public static final int MONSTER_BATTLE_TYPE_NONE_VALUE = 0;

    /**
     * <code>MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;</code>
     */
    public static final int MONSTER_BATTLE_TYPE_TRIGGER_BATTLE_VALUE = 1;

    /**
     * <code>MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;</code>
     */
    public static final int MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE_VALUE = 2;

    /**
     * <code>MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;</code>
     */
    public static final int MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE_VALUE = 3;

    /**
     * <code>MONSTER_BATTLE_TYPE_NO_BATTLE = 4;</code>
     */
    public static final int MONSTER_BATTLE_TYPE_NO_BATTLE_VALUE = 4;

    private final String name;

    private final int number;

    private MonsterBattleType(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<MonsterBattleType> converter() {
      return MonsterBattleTypeConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static MonsterBattleType forNumber(int value) {
      return MonsterBattleTypeConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static MonsterBattleType forNumberOr(int number, MonsterBattleType other) {
      MonsterBattleType value = forNumber(number);
      return value == null ? other : value;
    }

    enum MonsterBattleTypeConverter implements ProtoEnum.EnumConverter<MonsterBattleType> {
      INSTANCE;

      private static final MonsterBattleType[] lookup = new MonsterBattleType[5];

      static {
        lookup[0] = MONSTER_BATTLE_TYPE_NONE;
        lookup[1] = MONSTER_BATTLE_TYPE_TRIGGER_BATTLE;
        lookup[2] = MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE;
        lookup[3] = MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE;
        lookup[4] = MONSTER_BATTLE_TYPE_NO_BATTLE;
      }

      @Override
      public final MonsterBattleType forNumber(final int value) {
        if (value >= 0 && value < lookup.length) {
          return lookup[value];
        }
        return null;
      }

      @Override
      public final MonsterBattleType forName(final CharSequence value) {
        switch (value.length()) {
          case 24: {
            if (ProtoUtil.isEqual("MONSTER_BATTLE_TYPE_NONE", value)) {
              return MONSTER_BATTLE_TYPE_NONE;
            }
            break;
          }
          case 29: {
            if (ProtoUtil.isEqual("MONSTER_BATTLE_TYPE_NO_BATTLE", value)) {
              return MONSTER_BATTLE_TYPE_NO_BATTLE;
            }
            break;
          }
          case 34: {
            if (ProtoUtil.isEqual("MONSTER_BATTLE_TYPE_TRIGGER_BATTLE", value)) {
              return MONSTER_BATTLE_TYPE_TRIGGER_BATTLE;
            }
            break;
          }
          case 42: {
            if (ProtoUtil.isEqual("MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE", value)) {
              return MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE;
            }
            break;
          }
          case 46: {
            if (ProtoUtil.isEqual("MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE", value)) {
              return MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE;
            }
            break;
          }
        }
        return null;
      }
    }
  }
}
