// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class StrongChallengeActivityBattleEndScNotifyOuterClass {
  /**
   * Protobuf type {@code StrongChallengeActivityBattleEndScNotify}
   */
  public static final class StrongChallengeActivityBattleEndScNotify extends ProtoMessage<StrongChallengeActivityBattleEndScNotify> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 score = 3;</code>
     */
    private int score;

    /**
     * <code>optional uint32 JAMLOKNCAKC = 4;</code>
     */
    private int jAMLOKNCAKC;

    /**
     * <code>optional uint32 total_damage = 5;</code>
     */
    private int totalDamage;

    /**
     * <code>optional uint32 stage_id = 8;</code>
     */
    private int stageId;

    /**
     * <code>optional uint32 AHJFPNGDBDO = 11;</code>
     */
    private int aHJFPNGDBDO;

    /**
     * <code>optional uint32 GGBECCHPHCD = 13;</code>
     */
    private int gGBECCHPHCD;

    /**
     * <code>optional uint32 stage_score = 14;</code>
     */
    private int stageScore;

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     */
    private int endStatus;

    private StrongChallengeActivityBattleEndScNotify() {
    }

    /**
     * @return a new empty instance of {@code StrongChallengeActivityBattleEndScNotify}
     */
    public static StrongChallengeActivityBattleEndScNotify newInstance() {
      return new StrongChallengeActivityBattleEndScNotify();
    }

    /**
     * <code>optional uint32 score = 3;</code>
     * @return whether the score field is set
     */
    public boolean hasScore() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 score = 3;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearScore() {
      bitField0_ &= ~0x00000001;
      score = 0;
      return this;
    }

    /**
     * <code>optional uint32 score = 3;</code>
     * @return the score
     */
    public int getScore() {
      return score;
    }

    /**
     * <code>optional uint32 score = 3;</code>
     * @param value the score to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setScore(final int value) {
      bitField0_ |= 0x00000001;
      score = value;
      return this;
    }

    /**
     * <code>optional uint32 JAMLOKNCAKC = 4;</code>
     * @return whether the jAMLOKNCAKC field is set
     */
    public boolean hasJAMLOKNCAKC() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 JAMLOKNCAKC = 4;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearJAMLOKNCAKC() {
      bitField0_ &= ~0x00000002;
      jAMLOKNCAKC = 0;
      return this;
    }

    /**
     * <code>optional uint32 JAMLOKNCAKC = 4;</code>
     * @return the jAMLOKNCAKC
     */
    public int getJAMLOKNCAKC() {
      return jAMLOKNCAKC;
    }

    /**
     * <code>optional uint32 JAMLOKNCAKC = 4;</code>
     * @param value the jAMLOKNCAKC to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setJAMLOKNCAKC(final int value) {
      bitField0_ |= 0x00000002;
      jAMLOKNCAKC = value;
      return this;
    }

    /**
     * <code>optional uint32 total_damage = 5;</code>
     * @return whether the totalDamage field is set
     */
    public boolean hasTotalDamage() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 total_damage = 5;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearTotalDamage() {
      bitField0_ &= ~0x00000004;
      totalDamage = 0;
      return this;
    }

    /**
     * <code>optional uint32 total_damage = 5;</code>
     * @return the totalDamage
     */
    public int getTotalDamage() {
      return totalDamage;
    }

    /**
     * <code>optional uint32 total_damage = 5;</code>
     * @param value the totalDamage to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setTotalDamage(final int value) {
      bitField0_ |= 0x00000004;
      totalDamage = value;
      return this;
    }

    /**
     * <code>optional uint32 stage_id = 8;</code>
     * @return whether the stageId field is set
     */
    public boolean hasStageId() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 stage_id = 8;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearStageId() {
      bitField0_ &= ~0x00000008;
      stageId = 0;
      return this;
    }

    /**
     * <code>optional uint32 stage_id = 8;</code>
     * @return the stageId
     */
    public int getStageId() {
      return stageId;
    }

    /**
     * <code>optional uint32 stage_id = 8;</code>
     * @param value the stageId to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setStageId(final int value) {
      bitField0_ |= 0x00000008;
      stageId = value;
      return this;
    }

    /**
     * <code>optional uint32 AHJFPNGDBDO = 11;</code>
     * @return whether the aHJFPNGDBDO field is set
     */
    public boolean hasAHJFPNGDBDO() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 AHJFPNGDBDO = 11;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearAHJFPNGDBDO() {
      bitField0_ &= ~0x00000010;
      aHJFPNGDBDO = 0;
      return this;
    }

    /**
     * <code>optional uint32 AHJFPNGDBDO = 11;</code>
     * @return the aHJFPNGDBDO
     */
    public int getAHJFPNGDBDO() {
      return aHJFPNGDBDO;
    }

    /**
     * <code>optional uint32 AHJFPNGDBDO = 11;</code>
     * @param value the aHJFPNGDBDO to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setAHJFPNGDBDO(final int value) {
      bitField0_ |= 0x00000010;
      aHJFPNGDBDO = value;
      return this;
    }

    /**
     * <code>optional uint32 GGBECCHPHCD = 13;</code>
     * @return whether the gGBECCHPHCD field is set
     */
    public boolean hasGGBECCHPHCD() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional uint32 GGBECCHPHCD = 13;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearGGBECCHPHCD() {
      bitField0_ &= ~0x00000020;
      gGBECCHPHCD = 0;
      return this;
    }

    /**
     * <code>optional uint32 GGBECCHPHCD = 13;</code>
     * @return the gGBECCHPHCD
     */
    public int getGGBECCHPHCD() {
      return gGBECCHPHCD;
    }

    /**
     * <code>optional uint32 GGBECCHPHCD = 13;</code>
     * @param value the gGBECCHPHCD to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setGGBECCHPHCD(final int value) {
      bitField0_ |= 0x00000020;
      gGBECCHPHCD = value;
      return this;
    }

    /**
     * <code>optional uint32 stage_score = 14;</code>
     * @return whether the stageScore field is set
     */
    public boolean hasStageScore() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional uint32 stage_score = 14;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearStageScore() {
      bitField0_ &= ~0x00000040;
      stageScore = 0;
      return this;
    }

    /**
     * <code>optional uint32 stage_score = 14;</code>
     * @return the stageScore
     */
    public int getStageScore() {
      return stageScore;
    }

    /**
     * <code>optional uint32 stage_score = 14;</code>
     * @param value the stageScore to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setStageScore(final int value) {
      bitField0_ |= 0x00000040;
      stageScore = value;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @return whether the endStatus field is set
     */
    public boolean hasEndStatus() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify clearEndStatus() {
      bitField0_ &= ~0x00000080;
      endStatus = 0;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @return the endStatus
     */
    public BattleEndStatusOuterClass.BattleEndStatus getEndStatus() {
      return BattleEndStatusOuterClass.BattleEndStatus.forNumber(endStatus);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link StrongChallengeActivityBattleEndScNotify#getEndStatus()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getEndStatusValue() {
      return endStatus;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link BattleEndStatusOuterClass.BattleEndStatus}. Setting an invalid value
     * can cause {@link StrongChallengeActivityBattleEndScNotify#getEndStatus()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setEndStatusValue(final int value) {
      bitField0_ |= 0x00000080;
      endStatus = value;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @param value the endStatus to set
     * @return this
     */
    public StrongChallengeActivityBattleEndScNotify setEndStatus(
        final BattleEndStatusOuterClass.BattleEndStatus value) {
      bitField0_ |= 0x00000080;
      endStatus = value.getNumber();
      return this;
    }

    @Override
    public StrongChallengeActivityBattleEndScNotify copyFrom(
        final StrongChallengeActivityBattleEndScNotify other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        score = other.score;
        jAMLOKNCAKC = other.jAMLOKNCAKC;
        totalDamage = other.totalDamage;
        stageId = other.stageId;
        aHJFPNGDBDO = other.aHJFPNGDBDO;
        gGBECCHPHCD = other.gGBECCHPHCD;
        stageScore = other.stageScore;
        endStatus = other.endStatus;
      }
      return this;
    }

    @Override
    public StrongChallengeActivityBattleEndScNotify mergeFrom(
        final StrongChallengeActivityBattleEndScNotify other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasScore()) {
        setScore(other.score);
      }
      if (other.hasJAMLOKNCAKC()) {
        setJAMLOKNCAKC(other.jAMLOKNCAKC);
      }
      if (other.hasTotalDamage()) {
        setTotalDamage(other.totalDamage);
      }
      if (other.hasStageId()) {
        setStageId(other.stageId);
      }
      if (other.hasAHJFPNGDBDO()) {
        setAHJFPNGDBDO(other.aHJFPNGDBDO);
      }
      if (other.hasGGBECCHPHCD()) {
        setGGBECCHPHCD(other.gGBECCHPHCD);
      }
      if (other.hasStageScore()) {
        setStageScore(other.stageScore);
      }
      if (other.hasEndStatus()) {
        setEndStatusValue(other.endStatus);
      }
      return this;
    }

    @Override
    public StrongChallengeActivityBattleEndScNotify clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      score = 0;
      jAMLOKNCAKC = 0;
      totalDamage = 0;
      stageId = 0;
      aHJFPNGDBDO = 0;
      gGBECCHPHCD = 0;
      stageScore = 0;
      endStatus = 0;
      return this;
    }

    @Override
    public StrongChallengeActivityBattleEndScNotify clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof StrongChallengeActivityBattleEndScNotify)) {
        return false;
      }
      StrongChallengeActivityBattleEndScNotify other = (StrongChallengeActivityBattleEndScNotify) o;
      return bitField0_ == other.bitField0_
        && (!hasScore() || score == other.score)
        && (!hasJAMLOKNCAKC() || jAMLOKNCAKC == other.jAMLOKNCAKC)
        && (!hasTotalDamage() || totalDamage == other.totalDamage)
        && (!hasStageId() || stageId == other.stageId)
        && (!hasAHJFPNGDBDO() || aHJFPNGDBDO == other.aHJFPNGDBDO)
        && (!hasGGBECCHPHCD() || gGBECCHPHCD == other.gGBECCHPHCD)
        && (!hasStageScore() || stageScore == other.stageScore)
        && (!hasEndStatus() || endStatus == other.endStatus);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 24);
        output.writeUInt32NoTag(score);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(jAMLOKNCAKC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(totalDamage);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(stageId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(aHJFPNGDBDO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(gGBECCHPHCD);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(stageScore);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 8);
        output.writeEnumNoTag(endStatus);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(score);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jAMLOKNCAKC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(totalDamage);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(stageId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(aHJFPNGDBDO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(gGBECCHPHCD);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(stageScore);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(endStatus);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public StrongChallengeActivityBattleEndScNotify mergeFrom(final ProtoSource input) throws
        IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 24: {
            // score
            score = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // jAMLOKNCAKC
            jAMLOKNCAKC = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // totalDamage
            totalDamage = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // stageId
            stageId = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // aHJFPNGDBDO
            aHJFPNGDBDO = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // gGBECCHPHCD
            gGBECCHPHCD = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // stageScore
            stageScore = input.readUInt32();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // endStatus
            final int value = input.readInt32();
            if (BattleEndStatusOuterClass.BattleEndStatus.forNumber(value) != null) {
              endStatus = value;
              bitField0_ |= 0x00000080;
            }
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.score, score);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.jAMLOKNCAKC, jAMLOKNCAKC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.totalDamage, totalDamage);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.stageId, stageId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.aHJFPNGDBDO, aHJFPNGDBDO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.gGBECCHPHCD, gGBECCHPHCD);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeUInt32(FieldNames.stageScore, stageScore);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeEnum(FieldNames.endStatus, endStatus, BattleEndStatusOuterClass.BattleEndStatus.converter());
      }
      output.endObject();
    }

    @Override
    public StrongChallengeActivityBattleEndScNotify mergeFrom(final JsonSource input) throws
        IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 109264530: {
            if (input.isAtField(FieldNames.score)) {
              if (!input.trySkipNullValue()) {
                score = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1470264658: {
            if (input.isAtField(FieldNames.jAMLOKNCAKC)) {
              if (!input.trySkipNullValue()) {
                jAMLOKNCAKC = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1182674989:
          case 259733706: {
            if (input.isAtField(FieldNames.totalDamage)) {
              if (!input.trySkipNullValue()) {
                totalDamage = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1897528135:
          case 1306191356: {
            if (input.isAtField(FieldNames.stageId)) {
              if (!input.trySkipNullValue()) {
                stageId = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -685211121: {
            if (input.isAtField(FieldNames.aHJFPNGDBDO)) {
              if (!input.trySkipNullValue()) {
                aHJFPNGDBDO = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1814827586: {
            if (input.isAtField(FieldNames.gGBECCHPHCD)) {
              if (!input.trySkipNullValue()) {
                gGBECCHPHCD = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1108195892:
          case 352300561: {
            if (input.isAtField(FieldNames.stageScore)) {
              if (!input.trySkipNullValue()) {
                stageScore = input.readUInt32();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1608709293:
          case 378841046: {
            if (input.isAtField(FieldNames.endStatus)) {
              if (!input.trySkipNullValue()) {
                final BattleEndStatusOuterClass.BattleEndStatus value = input.readEnum(BattleEndStatusOuterClass.BattleEndStatus.converter());
                if (value != null) {
                  endStatus = value.getNumber();
                  bitField0_ |= 0x00000080;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public StrongChallengeActivityBattleEndScNotify clone() {
      return new StrongChallengeActivityBattleEndScNotify().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static StrongChallengeActivityBattleEndScNotify parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new StrongChallengeActivityBattleEndScNotify(), data).checkInitialized();
    }

    public static StrongChallengeActivityBattleEndScNotify parseFrom(final ProtoSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new StrongChallengeActivityBattleEndScNotify(), input).checkInitialized();
    }

    public static StrongChallengeActivityBattleEndScNotify parseFrom(final JsonSource input) throws
        IOException {
      return ProtoMessage.mergeFrom(new StrongChallengeActivityBattleEndScNotify(), input).checkInitialized();
    }

    /**
     * @return factory for creating StrongChallengeActivityBattleEndScNotify messages
     */
    public static MessageFactory<StrongChallengeActivityBattleEndScNotify> getFactory() {
      return StrongChallengeActivityBattleEndScNotifyFactory.INSTANCE;
    }

    private enum StrongChallengeActivityBattleEndScNotifyFactory implements MessageFactory<StrongChallengeActivityBattleEndScNotify> {
      INSTANCE;

      @Override
      public StrongChallengeActivityBattleEndScNotify create() {
        return StrongChallengeActivityBattleEndScNotify.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName score = FieldName.forField("score");

      static final FieldName jAMLOKNCAKC = FieldName.forField("JAMLOKNCAKC");

      static final FieldName totalDamage = FieldName.forField("totalDamage", "total_damage");

      static final FieldName stageId = FieldName.forField("stageId", "stage_id");

      static final FieldName aHJFPNGDBDO = FieldName.forField("AHJFPNGDBDO");

      static final FieldName gGBECCHPHCD = FieldName.forField("GGBECCHPHCD");

      static final FieldName stageScore = FieldName.forField("stageScore", "stage_score");

      static final FieldName endStatus = FieldName.forField("endStatus", "end_status");
    }
  }
}
