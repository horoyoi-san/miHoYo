// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class SubmitOfferingItemCsReqOuterClass {
  /**
   * Protobuf type {@code SubmitOfferingItemCsReq}
   */
  public static final class SubmitOfferingItemCsReq extends ProtoMessage<SubmitOfferingItemCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 offering_id = 1;</code>
     */
    private int offeringId;

    /**
     * <code>optional uint32 interacted_prop_entity_id = 6;</code>
     */
    private int interactedPropEntityId;

    private SubmitOfferingItemCsReq() {
    }

    /**
     * @return a new empty instance of {@code SubmitOfferingItemCsReq}
     */
    public static SubmitOfferingItemCsReq newInstance() {
      return new SubmitOfferingItemCsReq();
    }

    /**
     * <code>optional uint32 offering_id = 1;</code>
     * @return whether the offeringId field is set
     */
    public boolean hasOfferingId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 offering_id = 1;</code>
     * @return this
     */
    public SubmitOfferingItemCsReq clearOfferingId() {
      bitField0_ &= ~0x00000001;
      offeringId = 0;
      return this;
    }

    /**
     * <code>optional uint32 offering_id = 1;</code>
     * @return the offeringId
     */
    public int getOfferingId() {
      return offeringId;
    }

    /**
     * <code>optional uint32 offering_id = 1;</code>
     * @param value the offeringId to set
     * @return this
     */
    public SubmitOfferingItemCsReq setOfferingId(final int value) {
      bitField0_ |= 0x00000001;
      offeringId = value;
      return this;
    }

    /**
     * <code>optional uint32 interacted_prop_entity_id = 6;</code>
     * @return whether the interactedPropEntityId field is set
     */
    public boolean hasInteractedPropEntityId() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 interacted_prop_entity_id = 6;</code>
     * @return this
     */
    public SubmitOfferingItemCsReq clearInteractedPropEntityId() {
      bitField0_ &= ~0x00000002;
      interactedPropEntityId = 0;
      return this;
    }

    /**
     * <code>optional uint32 interacted_prop_entity_id = 6;</code>
     * @return the interactedPropEntityId
     */
    public int getInteractedPropEntityId() {
      return interactedPropEntityId;
    }

    /**
     * <code>optional uint32 interacted_prop_entity_id = 6;</code>
     * @param value the interactedPropEntityId to set
     * @return this
     */
    public SubmitOfferingItemCsReq setInteractedPropEntityId(final int value) {
      bitField0_ |= 0x00000002;
      interactedPropEntityId = value;
      return this;
    }

    @Override
    public SubmitOfferingItemCsReq copyFrom(final SubmitOfferingItemCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        offeringId = other.offeringId;
        interactedPropEntityId = other.interactedPropEntityId;
      }
      return this;
    }

    @Override
    public SubmitOfferingItemCsReq mergeFrom(final SubmitOfferingItemCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasOfferingId()) {
        setOfferingId(other.offeringId);
      }
      if (other.hasInteractedPropEntityId()) {
        setInteractedPropEntityId(other.interactedPropEntityId);
      }
      return this;
    }

    @Override
    public SubmitOfferingItemCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      offeringId = 0;
      interactedPropEntityId = 0;
      return this;
    }

    @Override
    public SubmitOfferingItemCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof SubmitOfferingItemCsReq)) {
        return false;
      }
      SubmitOfferingItemCsReq other = (SubmitOfferingItemCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasOfferingId() || offeringId == other.offeringId)
        && (!hasInteractedPropEntityId() || interactedPropEntityId == other.interactedPropEntityId);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(offeringId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(interactedPropEntityId);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(offeringId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(interactedPropEntityId);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public SubmitOfferingItemCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // offeringId
            offeringId = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // interactedPropEntityId
            interactedPropEntityId = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.offeringId, offeringId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.interactedPropEntityId, interactedPropEntityId);
      }
      output.endObject();
    }

    @Override
    public SubmitOfferingItemCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 170733505:
          case 997792756: {
            if (input.isAtField(FieldNames.offeringId)) {
              if (!input.trySkipNullValue()) {
                offeringId = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 162225878:
          case 1914923333: {
            if (input.isAtField(FieldNames.interactedPropEntityId)) {
              if (!input.trySkipNullValue()) {
                interactedPropEntityId = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public SubmitOfferingItemCsReq clone() {
      return new SubmitOfferingItemCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static SubmitOfferingItemCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new SubmitOfferingItemCsReq(), data).checkInitialized();
    }

    public static SubmitOfferingItemCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new SubmitOfferingItemCsReq(), input).checkInitialized();
    }

    public static SubmitOfferingItemCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new SubmitOfferingItemCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating SubmitOfferingItemCsReq messages
     */
    public static MessageFactory<SubmitOfferingItemCsReq> getFactory() {
      return SubmitOfferingItemCsReqFactory.INSTANCE;
    }

    private enum SubmitOfferingItemCsReqFactory implements MessageFactory<SubmitOfferingItemCsReq> {
      INSTANCE;

      @Override
      public SubmitOfferingItemCsReq create() {
        return SubmitOfferingItemCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName offeringId = FieldName.forField("offeringId", "offering_id");

      static final FieldName interactedPropEntityId = FieldName.forField("interactedPropEntityId", "interacted_prop_entity_id");
    }
  }
}
